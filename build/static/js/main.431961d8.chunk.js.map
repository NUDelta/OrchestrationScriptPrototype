{"version":3,"sources":["customBlocks/custom_Blocks.js","customBlocks/communication_blocks.js","customBlocks/function_blocks.js","customBlocks/time_blocks.js","customBlocks/resource_block.js","Scaffolding.js","toolboxCategories.js","DetectorWorkspace.js","ResponseWorkspace.js","App.js","reportWebVitals.js","index.js"],"names":["Blockly","Blocks","init","this","appendDummyInput","appendField","appendValueInput","setCheck","setOutput","setColour","setTooltip","setHelpUrl","Python","block","FieldTextInput","appendStatementInput","setInputsInline","getFieldValue","statementToCode","setPreviousStatement","valueToCode","ORDER_ATOMIC","FieldDropdown","Scaffolding","style","fontSize","height","width","marginBottom","marginTop","toolboxCategories","name","colour","blocks","type","actionToolbox","DetectorWorkspace","initialXml","wrapperDivClassName","workspaceConfiguration","workspaceDidChange","workspace","Xml","domToText","workspaceToDom","ResponseWorkspace","App","marginLeft","marginRight","Grid","container","spacing","item","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.431961d8.chunk.js","sourcesContent":["import Blockly from 'blockly';\nimport 'blockly/python';\n\nBlockly.Blocks['if'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"If: \");\n        this.appendValueInput(\"condition\")\n            .setCheck(\"Boolean\")\n            .appendField(\"(input: condition)\");\n        this.appendValueInput(\"do1\")\n            .setCheck(null)\n            .appendField(\"(input: action)\");\n        this.appendValueInput(\"else\")\n            .setCheck(null)\n            .appendField(\"else: \");\n        this.appendValueInput(\"do2\")\n            .setCheck(null)\n            .appendField(\"(input: action)\");\n        this.setOutput(false);\n        this.setColour(210);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['if'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['not'] = {\n    init: function () {\n        this.appendValueInput(\"not\")\n            .setCheck(null)\n            .appendField(\"not\")\n            .appendField(\"(output: boolean)\");\n        this.setOutput(true, \"Boolean\");\n        this.setColour(210);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['not'] = function (block) {\n    return \"...\";\n};\n\n\nBlockly.Blocks['new_boundary_function'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(new Blockly.FieldTextInput(\"Boundary Function Name\"), \"Name\");\n        this.appendStatementInput(\"Content\")\n            .setCheck(null);\n        this.setInputsInline(true);\n        this.setColour(315);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['new_boundary_function'] = function (block) {\n    var text_name = block.getFieldValue('Name');\n    var statements_content = Blockly.Python.statementToCode(block, 'Content');\n    // TODO: Assemble Python into code variable.\n    var code = 'def ' + text_name + '(_object,**kwargs):\\n' + statements_content + '\\n';\n    return code;\n};\n\nBlockly.Blocks['return'] = {\n    init: function () {\n        this.appendValueInput(\"NAME\")\n            .setCheck(null)\n            .appendField(\"return\");\n        this.setInputsInline(false);\n        this.setPreviousStatement(true, null);\n        this.setColour(330);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['return'] = function (block) {\n    var value_name = Blockly.Python.valueToCode(block, 'NAME', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'return ' + value_name + '\\n';\n    return code;\n};\n\nBlockly.Blocks['set'] = {\n    init: function () {\n        this.appendValueInput(\"name\")\n            .setCheck(null)\n            .appendField(\"set\");\n        this.appendValueInput(\"set\")\n            .setCheck(null)\n            .appendField(\"to\");\n        this.setInputsInline(true);\n        this.setColour(160);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['set'] = function (block) { return \"\"; };\n\nBlockly.Blocks['concept_variable'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"Concept Variable\");\n        this.appendValueInput(\"set\")\n            .setCheck(\"String\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(160);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['concept_variable'] = function (block) { return \"\"; };\n\nBlockly.Blocks['and'] = {\n    init: function () {\n        this.appendValueInput(\"left\")\n        this.appendValueInput(\"right\")\n            .appendField(\"AND\")\n            .appendField(\"(output: boolean)\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(210);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['and'] = function (block) { return \"\"; };\n\nBlockly.Blocks['or'] = {\n    init: function () {\n        this.appendValueInput(\"left\")\n            .setCheck(null);\n        this.appendValueInput(\"right\")\n            .setCheck(null)\n            .appendField(\"OR\")\n            .appendField(\"(output: boolean)\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(210);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['or'] = function (block) { return \"\"; };\n\nBlockly.Blocks['addition'] = {\n    init: function () {\n        this.appendValueInput(\"left\")\n            .setCheck(null);\n        this.appendValueInput(\"right\")\n            .setCheck(null)\n            .appendField(\"+\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(230);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['addition'] = function (block) { return \"\"; };\n\nBlockly.Blocks['subtraction'] = {\n    init: function () {\n        this.appendValueInput(\"left\")\n            .setCheck(null);\n        this.appendValueInput(\"right\")\n            .setCheck(null)\n            .appendField(\"-\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(230);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['subtraction'] = function (block) { return \"\"; };\n\nBlockly.Blocks['greater_than'] = {\n    init: function() {\n      this.appendValueInput(\"NAME\")\n          .setCheck(null);\n      this.appendValueInput(\"NAME\")\n          .setCheck(null)\n          .appendField(\">\");\n      this.setInputsInline(true);\n      this.setOutput(true, null);\n      this.setColour(230);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blockly.Python['greater_than'] = function (block) { return \"\"; };\n\n  Blockly.Blocks['less_than'] = {\n    init: function() {\n      this.appendValueInput(\"NAME\")\n          .setCheck(null);\n      this.appendValueInput(\"NAME\")\n          .setCheck(null)\n          .appendField(\"<\");\n      this.setInputsInline(true);\n      this.setOutput(true, null);\n      this.setColour(230);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blockly.Python['less_than'] = function (block) { return \"\"; };\n\n\nBlockly.Blocks['abs'] = {\n    init: function () {\n        this.appendValueInput(\"NAME\")\n            .setCheck(null)\n            .appendField(\"Abs\");\n        this.setInputsInline(false);\n        this.setOutput(true, null);\n        this.setColour(230);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['abs'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['negative'] = {\n    init: function () {\n        this.appendValueInput(\"NAME\")\n            .setCheck(null)\n            .appendField(\"-\");\n        this.setInputsInline(false);\n        this.setOutput(true, null);\n        this.setColour(230);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['negative'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['individual'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"student\");\n        this.appendDummyInput()\n            .appendField(new Blockly.FieldDropdown([[\"Aimee\", \"Aimee\"], [\"Ariella\", \"Ariella\"], [\"Ava\", \"Ava\"], [\"Charlotte\", \"Charlotte\"], [\"Gobi\", \"Gobi\"], [\"Grace\", \"Grace\"], [\"Hang\", \"Hang\"], [\"Harrison\", \"Harrison\"], [\"Jason\", \"Jason\"], [\"Jonathan\", \"Jonathan\"], [\"Kapil\", \"Kapil\"], [\"Kevin\", \"Kevin\"], [\"Leesha\", \"Leesha\"], [\"Mason\", \"Mason\"], [\"Molly\", \"Molly\"], [\"Neha\", \"Neha\"], [\"Nina\", \"Nina\"], [\"Roxy\", \"Roxy\"], [\"Ryan\", \"Ryan\"]]), \"student_name\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(260);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['individual'] = function (block) { return \"\"; };\n\nBlockly.Blocks['project_group'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"project\");\n        this.appendDummyInput()\n            .appendField(new Blockly.FieldDropdown([[\"Knowledge Maps\", \"Knowledge Maps\"], [\"Scaffolded Exercises\", \"Scaffolded Exercises\"], [\"Weekly\", \"Weekly\"], [\"Skill Tracking\", \"Skill Tracking\"]]), \"project\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(260);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['project_group'] = function (block) { return \"\"; };\n\nBlockly.Blocks['situation'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"Situation(boolean)\");\n        this.appendDummyInput()\n            .appendField(new Blockly.FieldDropdown([[\"1\", \"1\"], [\"2\", \"2\"], [\"3\", \"3\"], [\"4\", \"4\"], [\"5\", \"5\"]]), \"NAME\");\n        this.appendValueInput(\"NAME\")\n            .setCheck(null);\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(120);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['situation'] = function (block) { return \"\"; };\n\nBlockly.Blocks['situation_instance'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"Situation\");\n        this.appendDummyInput()\n            .appendField(new Blockly.FieldDropdown([[\"1\", \"1\"], [\"2\", \"2\"], [\"3\", \"3\"], [\"4\", \"4\"], [\"5\", \"5\"]]), \"NAME\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(120);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['situation_instance'] = function (block) { return \"\"; };\n\n\n\n","import Blockly from 'blockly';\nimport 'blockly/python';\n\nBlockly.Blocks['send'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"send\");\n      this.appendValueInput(\"message1\")\n          .setCheck(\"String\")\n          .appendField(\"(input: suggested actions)\");\n      this.appendValueInput(\"message2\")\n          .setCheck(\"String\")\n          .appendField(\"(input: underlying strategy)\");\n    /*\n      this.appendValueInput(\"recipient\")\n          .setCheck(\"recipient\")\n          .appendField(\"(input: recipient)\");\n    */\n      this.appendValueInput(\"medium\")\n          .setCheck(\"medium\")\n          .appendField(\"(input: medium)\");\n      this.appendValueInput(\"recipient\")\n          .setCheck(\"String\")\n          .appendField(\"(input: recipient)\");\n      this.setOutput(false);\n      this.setColour(20);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\nBlockly.Python['send'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['person'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Recipient: Person\");\n    this.appendValueInput(\"name\")\n        .setCheck(\"String\")\n        .appendField(\"(input: name)\");\n    this.setOutput(true, \"recipient\");\n    this.setColour(20);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['person'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['email_address'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Recipient: Email Address\");\n    this.appendValueInput(\"email\")\n        .setCheck(\"String\")\n        .appendField(\"(input: email)\");\n    this.setOutput(true, \"recipient\");\n    this.setColour(20);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['email_address'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['slack_channel'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Recipient: Slack Channel\");\n    this.appendValueInput(\"name\")\n        .setCheck(\"String\")\n        .appendField(\"(input: channel)\");\n    this.setOutput(true, \"recipient\");\n    this.setColour(20);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['slack_channel'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['slack'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Medium: Slack\");\n    this.setOutput(true, \"medium\");\n    this.setColour(20);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['slack'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['email'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Medium: Email\");\n    this.setOutput(true, \"medium\");\n    this.setColour(20);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['email'] = function (block) { \n    return \"...\";\n};","import Blockly from 'blockly';\nimport 'blockly/python';\n\nBlockly.Blocks['every'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Every\");\n    this.appendValueInput(\"time\")\n        .setCheck(\"time\")\n        .appendField(\"(input: time)\");\n    this.appendValueInput(\"action\")\n        .setCheck(null)\n        .appendField(\"(input: action)\");\n    this.setOutput(true, \"recipient\");\n    this.setColour(120);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['every'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['wasUpdated'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"wasUpdated\");\n    this.appendValueInput(\"time\")\n        .setCheck(\"resource\")\n        .appendField(\"(input: resource)\");\n    this.appendValueInput(\"venue\")\n        .appendField(\"(input: venue)\");\n    this.appendValueInput(\"time\")\n        .appendField(\"(input: time elapsed since venue)\");\n    this.setOutput(true, \"Boolean\");\n    this.setColour(120);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['wasUpdated'] = function (block) { \n    return \"...\";\n};\n\n\nBlockly.Blocks['wasupdatedv1'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"wasUpdated\");\n    this.appendValueInput(\"resource\")\n        .setCheck(null)\n        .appendField(\"(input: resource)\");\n    this.appendDummyInput()\n        .appendField(\"(output: boolean)\");\n    this.setInputsInline(false);\n    /*\n    this.appendValueInput(\"time_period\")\n        .setCheck(null)\n        .appendField(\"(input: time period)\");\n    */\n    this.setOutput(true, \"Boolean\");\n    this.setColour(120);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\n\nBlockly.Python['wasupdatedv1'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['At'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"At\");\n    this.appendValueInput(\"time\")\n        .setCheck(\"time\")\n        .appendField(\"(input: time)\");\n    this.appendValueInput(\"action\")\n        .setCheck(null)\n        .appendField(\"(input: action)\");\n    this.setOutput(true, null);\n    this.setColour(120);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['At'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['fullfillment'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Fullfillment\");\n    this.appendValueInput(\"message\")\n        .setCheck(null)\n        .appendField(\"(input: message)\");\n    this.appendValueInput(\"message\")\n        .setCheck(null)\n        .appendField(\"(input: recipient)\");\n    this.appendDummyInput(\"output: boolean\")\n        .appendField(\"(output: boolean)\");\n    this.setInputsInline(false);\n    this.setOutput(true, null);\n    this.setColour(120);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['fullfillment'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['timestamp'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"Timestamps when updated(output: list of timestamps)\");\n      this.appendDummyInput()\n          .appendField(\"(output: list of timestamps)\");\n      this.appendValueInput(\"resource\")\n          .setCheck(null)\n          .appendField(\"(input: resource)\");\n      this.appendValueInput(\"start\")\n          .setCheck(null)\n          .appendField(\"(input: start time)\");\n      this.appendValueInput(\"end\")\n          .setCheck(\"time\")\n          .appendField(\"(input: end time)\");\n      this.setOutput(true, \"list\");\n      this.setColour(120);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\nBlockly.Python['timestamp'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['distinct'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Count distinct days(output: number)\");\n    this.appendDummyInput()\n        .appendField(\"(output: number)\");\n    this.appendValueInput(\"list\")\n        .setCheck(\"list\")\n        .appendField(\"(input: list of timestamps)\");\n    this.setOutput(true, \"Number\");\n    this.setColour(120);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['distinct'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['filled'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"filled\");\n        this.appendValueInput(\"NAME\")\n            .setCheck(null)\n            .appendField(\"(input: resource)\");\n        this.appendDummyInput(\"output: boolean\")\n            .appendField(\"(output: boolean)\");\n        this.setInputsInline(false);\n        this.setOutput(true, null);\n        this.setColour(120);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n };\n \n Blockly.Python['filled'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['contains'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"contains\");\n        this.appendValueInput(\"NAME\")\n            .setCheck(null)\n            .appendField(\"(input: resource)\");\n        this.appendValueInput(\"blah\")\n            .setCheck(null)\n            .appendField(\"(input: text)\");\n        this.appendDummyInput(\"output: boolean\")\n            .appendField(\"(output: boolean)\");\n        this.setInputsInline(false);\n        this.setOutput(true, null);\n        this.setColour(120);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n };\n \n Blockly.Python['contains'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['was_read'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"wasRead\");\n        this.appendValueInput(\"NAME\")\n            .setCheck(null)\n            .appendField(\"(input: resource)\");\n        this.appendDummyInput(\"output: boolean\")\n            .appendField(\"(output: boolean)\");\n        this.setInputsInline(false);\n        this.setOutput(true, null);\n        this.setColour(120);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n };\n\n Blockly.Python['was_read'] = function (block) { \n    return \"...\";\n};","import Blockly from 'blockly';\nimport 'blockly/python';\n\nBlockly.Blocks['time'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"time\");\n      this.appendValueInput(\"Modifier\")\n          .setCheck(\"modifier\")\n          .appendField(\"(input: modifier)\");\n      this.appendValueInput(\"Event\")\n          .setCheck(\"event\")\n          .appendField(\"(input: event)\");\n      this.setOutput(true, null);\n      this.setColour(330);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\nBlockly.Python['time'] = function (block) {\n    \n    return \"time_in_python\";\n};\n\nBlockly.Blocks['after'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"Modifier: After\");\n      this.setOutput(true, \"modifier\");\n      this.setColour(330);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\nBlockly.Python['after'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['before'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Modifier: Before\");\n    this.setOutput(true, \"modifier\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['before'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['during'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Modifier: During\");\n    this.setOutput(true, \"modifier\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['during'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['at'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Modifier: At\");\n    this.setOutput(true, \"modifier\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['at'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['sig'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: SIG(Wednesday)\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['sig'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['sprint'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: Sprint\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"current\",\"current\"], [\"last\",\"last\"], [\"next\",\"next\"]]), \"which_sprint\");\n    this.setInputsInline(true);\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['sprint'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['days_of_the_week'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: Days of the week\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['days_of_the_week'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['mysore'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: Mysore\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['mysore'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['office_hour'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: Office hours(Monday)\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['office_hour'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['studio'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: Studio(Friday)\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['studio'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['week'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: week\");\n    this.appendValueInput(\"number_of_week\")\n        .setCheck(\"Number\")\n        .appendField(\"(input: week number)\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['week'] = function (block) { \n    return \"...\";\n};\n\nBlockly.Blocks['time_elapsed'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"1\",\"1\"], [\"2\",\"2\"], [\"5\",\"5\"], [\"10\",\"10\"]]), \"weeks\");\n    this.appendDummyInput()\n        .appendField(\"weeks\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"1\",\"1\"], [\"2\",\"2\"], [\"3\",\"3\"], [\"4\",\"4\"], [\"5\",\"5\"], [\"6\",\"6\"]]), \"days\");\n    this.appendDummyInput()\n        .appendField(\"days\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"1\",\"1\"], [\"2\",\"2\"], [\"3\",\"3\"], [\"6\",\"6\"], [\"12\",\"12\"]]), \"hours\");\n    this.appendDummyInput()\n        .appendField(\"hours\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"5\",\"5\"], [\"15\",\"15\"], [\"30\",\"30\"], [\"45\",\"45\"]]), \"minutes\");\n    this.appendDummyInput()\n        .appendField(\"minutes\");\n    this.setOutput(true, null);\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n this.setInputsInline(true);\n  }\n};\n\nBlockly.Python['time_elapsed'] = function (block) { \n  return \"...\";\n};\n\nBlockly.Blocks['time_period'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Time period\");\n    this.appendValueInput(\"start\")\n        .setCheck(null)\n        .appendField(\"(input: start time)\");\n    this.appendValueInput(\"end\")\n        .setCheck(null)\n        .appendField(\"(input: end time)\");\n    this.setOutput(true, \"Boolean\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['time_period'] = function (block) { \n  return \"...\";\n};","import Blockly from 'blockly';\nimport 'blockly/python';\n\nBlockly.Blocks['ipm'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"ipm\")\n        .appendField(new Blockly.FieldDropdown([[\"module -> topic\", \"module -> topic\"], [\"module -> Type\", \"module -> Type\"], [\"module -> description\", \"module -> description\"],\n          [\"module -> read?\", \"module -> read?\"], [\"module -> understood?\", \"module -> understood?\"], [\"module -> applied?\", \"module -> applied?\"], [\"module -> questions\", \"module -> questions\"]]), \"NAME\");\n    this.appendDummyInput(\"output: string\")\n        .appendField(\"(output: string)\");\n        this.setInputsInline(false);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n };\n\n Blockly.Blocks['student response to slack bot'] = {\n   init: function() {\n     this.appendDummyInput()\n         .appendField(\"student response to slack bot\");\n     this.appendValueInput(\"message\")\n             .setCheck(\"String\")\n             .appendField(\"(input: slack bot name)\");\n         this.setInputsInline(false);\n     this.setOutput(true, null);\n     this.setColour(290);\n  this.setTooltip(\"\");\n  this.setHelpUrl(\"\");\n   }\n  };\n\nBlockly.Blocks['sprint_log'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Sprint Log\")\n        .appendField(new Blockly.FieldDropdown([[\"current\",\"current\"], [\"previous\",\"previous\"], [\"next\",\"next\"]]), \"NAME\")\n        .appendField(new Blockly.FieldDropdown([[\"stories\", \"stories\"],[\"in progress stories\", \"in progress stories\"],[\"tasks\",\"tasks\"],[\"in progress tasks\", \"in progress tasks\"],[\"story -> points committed\",\n        \"story -> points committed\"], [\"story -> hours spent\", \"story -> hours spent\"],[\"story -> Total D Points\", \"story -> Total D Points\"],\n        [\"story -> Total T Points\", \"story -> Total T Points\"], [\"story -> Total R Points\", \"story -> Total R Points\"],[\"story -> Progress\", \"story -> Progress\"],\n         [\"story -> Burndown\", \"story -> Burndown\"],[\"task -> roadblocks\",\"task -> roadblocks\"],\n         [\"task -> points required\", \"task -> points required\"], [\"task -> D, T, or R\", \"task -> D, T, or R\"], [\"task -> assigned to\", \"task -> assigned to\"],[\"task -> status\", \"task -> status\"],[\"task -> hours spent\", \"task -> hours spent\"]]), \"NAME\");\n    this.appendDummyInput(\"output: number\")\n        .appendField(\"(output: number)\");\n        this.setInputsInline(false);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\n\nBlockly.Blocks['rrc'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"RRC\")\n        .appendField(new Blockly.FieldDropdown([[\"Planning view -> gaps in canvas\", \"Planning view -> gaps in canvas\"],[\"Planning view -> Focus for sprint\", \"Planning view -> Focus for sprint\"], [\"Planning view -> What we learned\", \"Planning view -> What we learned\"],\n\n          [\"section 1: identify your research audience\",\"section 1: identify your research audience\"], [\"section 2: define class of problems and desired outcomes\",\"section 2: define class of problems and desired outcomes\"], [\"section 3: existing approaches and schools of thought (farther approaches)\",\"section 3: existing approaches and schools of thought (farther approaches)\"], [\"section 4: existing approaches and schools of thought (closer approaches)\",\"section 4: existing approaches and schools of thought (closer approaches)\"], [\"section 5: research question\",\"section 5: research question\"], [\"section 6: conceptual contribution\",\"section 6: conceptual contribution\"], [\"section 7: technical contribution\",\"section 7: technical contribution\"], [\"section 8: synthesis tree\",\"section 8: synthesis tree\"], [\"section 9: study design\",\"section 9: study design\"], [\"section 10: core takeaways\",\"section 10: core takeaways\"], [\"section 11: revised understanding of conceptual and technical approach\",\"section 11: revised understanding of conceptual and technical approach\"], [\"section 12: future work\",\"section 12: future work\"]]), \"NAME\");\n    this.appendDummyInput(\"output: string\")\n        .appendField(\"(output: string)\");\n        this.setInputsInline(false);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n };\n\n Blockly.Blocks['stash'] = {\n   init: function() {\n     this.appendDummyInput()\n         .appendField(\"stash\")\n         .appendField(new Blockly.FieldDropdown([[\"riskiest risk\",\"riskiest risk\"],[\"blocker\", \"blocker\"],[\"why blocker is challenging\", \"why blocker is challenging\"],\n         [\"Which LIP learning module would be most helpful\", \"Which LIP learning module would be most helpful\"], [\"What skill/expertise one looks for\", \"What skill/expertise one looks for\"],\n          [\"Pair Research request\", \"Pair Research request\"], [\"New understanding of blocker\", \"New understanding of blocker\"]]), \"NAME\");\n     this.appendDummyInput(\"output: string\")\n         .appendField(\"(output: string)\");\n         this.setInputsInline(false);\n     this.setOutput(true, null);\n     this.setColour(290);\n  this.setTooltip(\"\");\n  this.setHelpUrl(\"\");\n   }\n  };\n\n  Blockly.Blocks['pair research sign up (studio)'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"pair research sign up (studio)\")\n          .appendField(new Blockly.FieldDropdown([[\"Did they sign up for PR during studio\",\"Did they sign up for PR during studio\"], [\"What time did they submit their PR\", \"What time did they submit their PR\"],[\"Content of their PR request\",\"Content of their PR request\"],\n        [\"who they were paired with\", \"who they were paired with\"], [\"Content of the PR request they helped someone with\", \"Content of the PR request they helped someone with\"]]), \"NAME\");\n      this.appendDummyInput(\"output: string\")\n          .appendField(\"(output: string)\");\n          this.setInputsInline(false);\n      this.setOutput(true, null);\n      this.setColour(290);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n   };\n\n Blockly.Blocks['urg_guide'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"URG Guide\");\n    this.appendDummyInput(\"output: string\")\n        .appendField(\"(output: string)\");\n    this.setInputsInline(false);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n };\n\n\nBlockly.Blocks['prc'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"PRC\")\n        .appendField(new Blockly.FieldDropdown([[\"Planning View -> Gaps in canvas\", \"Planning View -> Gaps in canvas\"],\n        [\"Planning view -> Focus for sprint\", \"Planning view -> Focus for sprint\"], [\"Planning view -> What we learned\", \"Planning view -> What we learned\"],\n        [\"section 1: identify a design situation\",\"section 1: identify a design situation\"], [\"section 2: test if a design problem\",\"section 2: test if a design problem\"],\n        [\"section 3: describe broader impact\",\"section 3: describe broader impact\"], [\"section 4-7: design arguments\",\"section 4-7: design arguments\"],\n        [\"section 8-9: check your design arguments\",\"section 8-9: check your design arguments\"], [\"section 10: interface arguments\",\"section 10: interface arguments\"],\n         [\"section 11: interface models\",\"section 11: interface models\"], [\"section 12: system arguments\",\"section 12: system arguments\"], [\"section 13: system models\",\"section 13: system models\"],\n         [\"section 14a: study aims and expected outcomes\",\"section 14a: study aims and expected outcomes\"], [\"section 14b: study aims and expected outcomes\",\"section 14b: study aims and expected outcomes\"],\n         [\"section 15a: study setup (participants)\",\"section 15a: study setup (participants)\"], [\"section 15b: study setup (scenario)\",\"section 15b: study setup (scenario)\"],\n         [\"section 16: data collection\",\"section 16: data collection\"], [\"section 17: core findings\",\"section 17: core findings\"], [\"section 18: design implications\",\"section 18: design implications\"]]), \"NAME\");\n    this.appendDummyInput(\"output: string\")\n        .appendField(\"(output: string)\");\n    this.setInputsInline(false);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n };\n\n\nBlockly.Blocks['lip_signup'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"LIP sign up\")\n        .appendField(new Blockly.FieldDropdown([[\"which learning module they signed up for\",\"which learning module they signed up for\"]]));\n    this.setOutput(true, \"resource\");\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['google calendar'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"google calendar\")\n        .appendField(new Blockly.FieldDropdown([[\"SIG meeting time\",\"SIG meeting time\"],[\"OH meeting time\", \"OH meeting time\"], [\"studio time\", \"studio time\"], [\"status update date\", \"status update date\"]]));\n    this.setOutput(true, \"resource\");\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\n\n\nBlockly.Blocks['dtr_meeting_log'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"DTR Meeting Log\");\n    this.setOutput(true, \"resource\");\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['previous_soap_notes'] = {\n  init: function () {\n      this.appendDummyInput()\n          .appendField(\"Previous SOAP Notes\")\n          .appendField(new Blockly.FieldDropdown([[\"subjective\", \"subjective\"], [\"objective\", \"objective\"], [\"assessment\", \"assessment\"], [\"plan\", \"plan\"], [\"follow up\", \"follow up\"]]), \"NAME\");\n      this.appendDummyInput(\"output: string\")\n          .appendField(\"(output: string)\");\n          this.setInputsInline(false);\n      this.setOutput(true, null);\n      this.setColour(290);\n      this.setTooltip(\"\");\n      this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['student'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Student\")\n        .appendField(new Blockly.FieldDropdown([[\"Jason\",\"Jason\"], [\"Hang\",\"Hang\"]]), \"NAME\")\n        .appendField(new Blockly.FieldDropdown([[\"D_points\",\"D_points\"], [\"T_points\",\"T_points\"], [\"R_points\",\"R_points\"], [\"points committed\",\"points committed\"],[\"points spent\", \"points spent\"], [\"progress (percent of committed points done)\", \"progress (percent of committed points done\"], [\"burndown (hours spent / points required)\",\"burndown (hours spent / points required\"]]), \"NAME\");\n    this.appendDummyInput(\"output: number\")\n        .appendField(\"(output: number)\");\n        this.setInputsInline(false);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['ipm'] = function (block) { return \"...\";};\nBlockly.Python['sprint_log'] = function (block) { return \"...\";};\nBlockly.Python['rrc'] = function (block) { return \"...\";};\nBlockly.Python['prc'] = function (block) { return \"...\";};\nBlockly.Python['stash'] = function (block) { return \"...\";};\nBlockly.Python['pair research sign up (studio)'] = function (block) { return \"...\";};\nBlockly.Python['lip_signup'] = function (block) { return \"...\";};\nBlockly.Python['dtr_meeting_log'] = function (block) { return \"...\";};\nBlockly.Python['urg_guide'] = function (block) { return \"...\";};\nBlockly.Python['previous_soap_notes'] = function (block) { return \"...\";};\nBlockly.Python['google calendar'] = function (block) { return \"...\";};\nBlockly.Python['student'] = function (block) { return \"...\";};\nBlockly.Python['student response to slack bot'] = function (block) { return \"...\";};\n","import React from 'react';\n// import Collapsible from 'react-collapsible';\n\nexport default function Scaffolding() {\n    return (\n      <div>\n\n        <label style={{fontSize: \"15px\"}}>Step1: Think back to a time when your student wasn't working or learning effectively. Describe the situation that occurred and how you noticed that it was happening.</label>\n        <textarea style={{ height: \"20vh\", width: \"100%\", fontSize: \"15px\", marginBottom: 16, marginTop: 10 }}></textarea>\n\n        <label style={{fontSize: \"15px\"}}>Step2: How did you support your student in practicing alternative working or learning strategies? Keep in mind how this strategy can occur across venues/tools/processes in the DTR network.</label>\n        <textarea style={{ height: \"10vh\", width: \"100%\", fontSize: \"15px\", marginBottom: 16, marginTop: 10 }}></textarea>\n\n        <label style={{fontSize: \"15px\"}}>Step3: Restate the situation you described in step1 and write a detector script and a response script for it in step4 and 5. </label>\n        <textarea style={{ height: \"20vh\", width: \"100%\", fontSize: \"15px\", marginTop: 10 }}></textarea>\n\n      </div>\n    );\n}","import React from 'react';\n\nconst toolboxCategories = [\n    {\n      name: \"Logic\",\n      colour: \"#5C81A6\",\n      blocks: [\n        //{type: 'if'},\n        {type: 'not'},\n        {type: 'and'},\n        {type: 'or'},\n        {type: 'logic_compare'},\n\n      ]\n\n    },\n    {\n      name: \"Text\",\n      colour: \"#68DEC2\",\n      blocks: [{ type: \"text\" }],\n    },\n    {\n      name: \"Math\",\n      colour: \"#ACAEEA\",\n      blocks: [\n        { type: \"math_round\" },\n        { type: \"math_number\" },\n        { type: \"addition\" },\n        { type: \"subtraction\" },\n        { type: \"abs\" },\n        { type: \"negative\" },\n        { type: \"greater_than\" },\n        { type: \"less_than\" },\n      ],\n    },\n    {\n      name: \"Resources\",\n      colour: \"#CEABFA\",\n      blocks: [\n\n        {type: 'ipm'},\n        {type: 'sprint_log'},\n        {type: 'rrc'},\n        {type: 'prc'},\n        {type: 'stash'},\n        {type: 'pair research sign up (studio)'},\n        {type: 'lip_signup'},\n        //{type: 'dtr_meeting_log'},\n        {type: 'urg_guide'},\n        {type: 'previous_soap_notes'},\n        {type: 'student'},\n        {type: 'google calendar'},\n        {type: 'student response to slack bot'},\n      ]\n\n    },\n    {\n      name: \"Functions\",\n      colour: \"#D3FFCE\",\n      blocks: [\n        //{type: 'every'},\n        { type: \"contains\" },\n        { type: \"wasupdatedv1\" },\n        { type: \"filled\" },\n        { type: \"was_read\" },\n        //{type: 'At'},\n        { type: \"fullfillment\" },\n      ],\n    },\n    /*\n    {\n      name: \"Concepts\",\n      colour: \"#D3FFCE\",\n      blocks: [{ type: \"set\" }, { type: \"concept_variable\" }],\n    },\n    {\n      name: \"Situation\",\n      colour: \"#5C81A6\",\n      blocks: [{ type: \"situation\" }],\n    },\n    */\n  ];\nconst timeToolbox = [\n    {\n      name: \"Time\",\n      colour: \"#F08080\",\n      blocks: [\n        { type: \"time\" },\n        { type: \"time_elapsed\" },\n        { type: \"time_period\" },\n      ],\n    },\n    {\n      name: \"Modifier\",\n      colour: \"#F08080\",\n      blocks: [\n        { type: \"after\" },\n        { type: \"before\" },\n        { type: \"during\" },\n        { type: \"at\" },\n      ],\n    },\n    {\n      name: \"Event\",\n      colour: \"#F08080\",\n      blocks: [\n        { type: \"sig\" },\n        { type: \"sprint\" },\n        { type: \"days_of_the_week\" },\n        { type: \"office_hour\" },\n        { type: \"studio\" },\n        { type: \"week\" },\n      ],\n    },\n    {\n      name: \"Math\",\n      colour: \"#ACAEEA\",\n      blocks: [\n        { type: \"math_round\" },\n        { type: \"math_number\" },\n        { type: \"addition\" },\n      ],\n    },\n  ];\n\nconst actionToolbox = [\n    \n    /*\n    {\n      name: \"Logic\",\n      colour: \"#5C81A6\",\n      blocks: [\n        { type: \"if\" },\n        { type: \"not\" },\n        { type: \"and\" },\n        { type: \"or\" },\n        { type: \"logic_compare\" },\n      ],\n    },\n    {\n      name: \"Situation\",\n      colour: \"#5C81A6\",\n      blocks: [{ type: \"situation_instance\" }],\n    },\n    */\n    {\n      name: \"Communication\",\n      colour: \"#998362\",\n      blocks: [{ type: \"send\" }],\n    },\n    {\n      name: \"Text\",\n      colour: \"#68DEC2\",\n      blocks: [{ type: \"text\" }],\n    },\n    {\n      name: \"Medium\",\n      colour: \"#998362\",\n      blocks: [{ type: \"slack\" }, { type: \"email\" }],\n    },\n];\n\nexport { toolboxCategories, timeToolbox, actionToolbox };","import \"./App.css\";\nimport \"./customBlocks/custom_Blocks\";\nimport React from \"react\";\nimport ReactBlockly from \"react-blockly\";\nimport Blockly from \"blockly\";\nimport \"./customBlocks/communication_blocks\";\nimport \"./customBlocks/function_blocks\";\nimport \"./customBlocks/time_blocks\";\nimport \"./customBlocks/resource_block\";\nimport \"intersection-observer\";\nimport \"react-pro-sidebar/dist/css/styles.css\";\nimport {toolboxCategories} from \"./toolboxCategories\";\n\nexport default function DetectorWorkspace() {\n\n    // initial configuration\n    const initialXml =\n    '<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"text\" x=\"70\" y=\"30\"><field name=\"TEXT\"></field></block></xml>';\n\n    function workspaceDidChange(workspace) {\n        const newXml = Blockly.Xml.domToText(Blockly.Xml.workspaceToDom(workspace));\n        /*\n        document.getElementById('generated-xml').innerText = newXml;\n        const code = Blockly.Python.workspaceToCode(workspace);\n        document.getElementById('code').value = code;\n        */\n    }\n\n    return (\n      <div style = {{marginBottom: 16, marginTop: 10}}>\n        <ReactBlockly\n            toolboxCategories={toolboxCategories}\n            initialXml={initialXml}\n            wrapperDivClassName=\"one-third\"\n            workspaceConfiguration={\n            {\n                /*grid: {\n            spacing: 20,\n            length: 3,\n            colour: '#ccc',\n            snap: true,\n        },\n        */\n                //theme: DarkTheme,\n            }\n            }\n            workspaceDidChange={workspaceDidChange}\n        />\n      </div>\n    );\n}","import \"./App.css\";\nimport \"./customBlocks/custom_Blocks\";\nimport React from \"react\";\nimport ReactBlockly from \"react-blockly\";\nimport Blockly from \"blockly\";\nimport \"./customBlocks/communication_blocks\";\nimport \"./customBlocks/function_blocks\";\nimport \"./customBlocks/time_blocks\";\nimport \"./customBlocks/resource_block\";\nimport \"intersection-observer\";\nimport \"react-pro-sidebar/dist/css/styles.css\";\nimport {actionToolbox} from \"./toolboxCategories\";\n\nexport default function ResponseWorkspace() {\n\n    // initial configuration\n    const initialXml =\n    '<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"text\" x=\"70\" y=\"30\"><field name=\"TEXT\"></field></block></xml>';\n\n    function workspaceDidChange(workspace) {\n        const newXml = Blockly.Xml.domToText(Blockly.Xml.workspaceToDom(workspace));\n        /*\n        document.getElementById('generated-xml').innerText = newXml;\n        const code = Blockly.Python.workspaceToCode(workspace);\n        document.getElementById('code').value = code;\n        */\n    }\n\n    return (\n      <div style = {{marginTop: 10}}>\n        <ReactBlockly\n            toolboxCategories={actionToolbox}\n            initialXml={initialXml}\n            wrapperDivClassName=\"one-third\"\n            workspaceConfiguration={\n            {\n                //theme: DarkTheme,\n            }\n            }\n            workspaceDidChange={workspaceDidChange}\n        />\n      </div>\n    );\n}","import \"./App.css\";\nimport \"./customBlocks/custom_Blocks\";\nimport React from \"react\";\nimport \"./customBlocks/communication_blocks\";\nimport \"./customBlocks/function_blocks\";\nimport \"./customBlocks/time_blocks\";\nimport \"./customBlocks/resource_block\";\nimport \"intersection-observer\";\nimport \"react-pro-sidebar/dist/css/styles.css\";\nimport Scaffolding from \"./Scaffolding\";\nimport DetectorWorkspace from \"./DetectorWorkspace\";\nimport ResponseWorkspace from \"./ResponseWorkspace\";\nimport Grid from \"@material-ui/core/Grid\";\n\n/*\nimport ReactBlockly from \"react-blockly\";\nimport {toolboxCategories, actionToolbox, timeToolbox} from \"./toolboxCategories\";\nimport Blockly from \"blockly\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DarkTheme from \"@blockly/theme-dark\";\nimport MyTimeline from \"./Timeline\";\nimport HorizontalLabelPositionBelowStepper from \"./Stepper\";\nimport Select from \"react-select\";\nimport DiscreteSlider from \"./Slider\";\nimport { ProSidebar, Menu, MenuItem, SubMenu } from \"react-pro-sidebar\";\nimport CollapsibleTable from \"./dictionary/Dictionary\";\nimport { ScrollView } from \"@cantonjs/react-scroll-view\";\n*/\n\n// define \"applicable set\"\n/*\nconst options = [\n  { value: \"km\", label: \"Knowledge Maps\" },\n  { value: \"se\", label: \"Scaffolded Exercises\" },\n  { value: \"we\", label: \"Weekly\" },\n  { value: \"st\", label: \"Skill Tracking\" },\n];\n*/\n\nexport default function App() {\n\n  return (\n    <div style={{/*backgroundColor: '#1e1e1e',*/marginLeft:16, marginRight:16, marginTop:16,marginBottom:16}}>\n\n\n      <Grid container spacing={5}>\n        \n        <Grid item xs={9}>\n\n          <label style={{fontSize: \"15px\", marginBottom: 16}}>Step4: Detector<br/>(if the detector expression is evaluated to true, the response prompt will be triggered)</label>\n          <DetectorWorkspace />\n\n          <label style={{fontSize: \"15px\", marginBottom: 16}}>Step5: Response<br/>(make sure you both suggest actions and help mentees be aware of the underlying strategy)</label>\n          <ResponseWorkspace />\n\n        </Grid>\n\n        <Grid item xs={3}>\n\n          <Scaffolding />\n\n        </Grid>\n        \n\n      </Grid>\n\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}