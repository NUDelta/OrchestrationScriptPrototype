{"version":3,"sources":["customBlocks/custom_Blocks.js","customBlocks/communication_blocks.js","customBlocks/function_blocks.js","customBlocks/time_blocks.js","customBlocks/resource_block.js","customBlocks/object_blocks.js","Scaffolding.js","customBlocks/high_level.js","blockly_toolbox/detectionToolbox.js","blockly_workspace/DetectorWorkspace.js","blockly_toolbox/responseToolbox.js","blockly_workspace/ResponseWorkspace.js","App.js","reportWebVitals.js","index.js"],"names":["Blockly","Blocks","init","this","appendDummyInput","appendField","appendValueInput","FieldTextInput","setOutput","FieldDropdown","setInputsInline","setColour","setTooltip","setHelpUrl","Python","block","setCheck","appendStatementInput","getFieldValue","statementToCode","setPreviousStatement","valueToCode","ORDER_ATOMIC","setAlign","ALIGN_RIGHT","Scaffolding","style","fontSize","height","width","marginBottom","marginTop","detectionToolbox","name","colour","blocks","type","DetectorWorkspace","toolboxCategories","initialXml","wrapperDivClassName","workspaceConfiguration","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","pinch","workspaceDidChange","workspace","Xml","domToText","workspaceToDom","responseToolbox","ResponseWorkspace","options","value","label","App","marginLeft","marginRight","Grid","container","spacing","item","xs","placeholder","isMulti","overflow","display","map","range","_","Container","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAGAA,IAAQC,OAAR,GAAuB,CACnBC,KAAM,WACFC,KAAKC,mBACAC,YAAY,OACjBF,KAAKG,iBAAiB,aAEjBD,YAAY,sBACjBF,KAAKC,mBACAC,YAAY,gCACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQO,eAAe,aAAc,QAC1DJ,KAAKC,mBACAC,YAAY,UACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQO,eAAe,mBAAoB,SAWhEJ,KAAKK,WAAU,GACfL,KAAKC,mBACAC,YAAY,IACZA,YAAY,IAAIL,IAAQS,cAAc,CACrC,CAAC,KAAM,MACP,CAAC,SAAU,UACX,CAAC,QAAQ,WAAY,SACvBN,KAAKO,iBAAgB,GACzBP,KAAKC,mBACAC,YAAY,IACZA,YAAY,IAAIL,IAAQS,cAAc,CACrC,CAAC,8BAA+B,+BAChC,CAAC,wBAAyB,yBAC5B,CAAC,sBAAuB,uBAC1B,CAAC,yBAA0B,0BACvB,CAAC,uBAAwB,wBACzB,CAAC,0BAA2B,2BAC5B,CAAC,sBAAuB,yBAA0B,SACpDN,KAAKO,iBAAgB,GAYzBP,KAAKK,WAAU,GACfL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,GAAuB,SAAUC,GAC7B,MAAO,OAGXf,IAAQC,OAAR,IAAwB,CACpBC,KAAM,WACFC,KAAKG,iBAAiB,OACjBU,SAAS,MACTX,YAAY,OAEjBF,KAAKK,WAAU,EAAM,WACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,IAAwB,SAAUC,GAC9B,MAAO,OAIXf,IAAQC,OAAR,sBAA0C,CACtCC,KAAM,WACFC,KAAKC,mBACAC,YAAY,IAAIL,IAAQO,eAAe,0BAA2B,QACvEJ,KAAKc,qBAAqB,WACrBD,SAAS,MACdb,KAAKO,iBAAgB,GACrBP,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,sBAA0C,SAAUC,GAKhD,MADW,OAHKA,EAAMG,cAAc,QAGJ,wBAFPlB,IAAQc,OAAOK,gBAAgBJ,EAAO,WAEgB,MAInFf,IAAQC,OAAR,OAA2B,CACvBC,KAAM,WACFC,KAAKG,iBAAiB,QACjBU,SAAS,MACTX,YAAY,UACjBF,KAAKO,iBAAgB,GACrBP,KAAKiB,sBAAqB,EAAM,MAChCjB,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,OAA2B,SAAUC,GAIjC,MADW,UAFMf,IAAQc,OAAOO,YAAYN,EAAO,OAAQf,IAAQc,OAAOQ,cAEtC,MAIxCtB,IAAQC,OAAR,IAAwB,CACpBC,KAAM,WACFC,KAAKG,iBAAiB,QACjBU,SAAS,MACTX,YAAY,OACjBF,KAAKG,iBAAiB,OACjBU,SAAS,MACTX,YAAY,MACjBF,KAAKO,iBAAgB,GACrBP,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,IAAwB,SAAUC,GAAS,MAAO,IAElDf,IAAQC,OAAR,iBAAqC,CACjCC,KAAM,WACFC,KAAKC,mBACAC,YAAY,oBACjBF,KAAKG,iBAAiB,OACjBU,SAAS,UACdb,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,iBAAqC,SAAUC,GAAS,MAAO,IAE/Df,IAAQC,OAAR,IAAwB,CACpBC,KAAM,WACFC,KAAKG,iBAAiB,QACtBH,KAAKG,iBAAiB,SACjBD,YAAY,OAEjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,IAAwB,SAAUC,GAAS,MAAO,IAElDf,IAAQC,OAAR,GAAuB,CACnBC,KAAM,WACFC,KAAKG,iBAAiB,QACjBU,SAAS,MACdb,KAAKG,iBAAiB,SACjBU,SAAS,MACTX,YAAY,MAEjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,GAAuB,SAAUC,GAAS,MAAO,IAEjDf,IAAQC,OAAR,SAA6B,CACzBC,KAAM,WACFC,KAAKG,iBAAiB,QACjBU,SAAS,MACdb,KAAKG,iBAAiB,SACjBU,SAAS,MACTX,YAAY,KACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,SAA6B,SAAUC,GAAS,MAAO,IAEvDf,IAAQC,OAAR,YAAgC,CAC5BC,KAAM,WACFC,KAAKG,iBAAiB,QACjBU,SAAS,MACdb,KAAKG,iBAAiB,SACjBU,SAAS,MACTX,YAAY,KACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,YAAgC,SAAUC,GAAS,MAAO,IAE1Df,IAAQC,OAAR,aAAiC,CAC7BC,KAAM,WACJC,KAAKG,iBAAiB,QACjBU,SAAS,MACdb,KAAKG,iBAAiB,QACjBU,SAAS,MACTX,YAAY,KACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,aAAiC,SAAUC,GAAS,MAAO,IAE3Df,IAAQC,OAAR,UAA8B,CAC5BC,KAAM,WACJC,KAAKG,iBAAiB,QACjBU,SAAS,MACdb,KAAKG,iBAAiB,QACjBU,SAAS,MACTX,YAAY,KACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,UAA8B,SAAUC,GAAS,MAAO,IAG1Df,IAAQC,OAAR,IAAwB,CACpBC,KAAM,WACFC,KAAKG,iBAAiB,QACjBU,SAAS,MACTX,YAAY,OACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,IAAwB,SAAUC,GAC9B,MAAO,OAGXf,IAAQC,OAAR,SAA6B,CACzBC,KAAM,WACFC,KAAKG,iBAAiB,QACjBU,SAAS,MACTX,YAAY,KACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,SAA6B,SAAUC,GACnC,MAAO,OAGXf,IAAQC,OAAR,WAA+B,CAC3BC,KAAM,WACFC,KAAKC,mBACAC,YAAY,WACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,QAAS,SAAU,CAAC,UAAW,WAAY,CAAC,MAAO,OAAQ,CAAC,YAAa,aAAc,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,WAAY,YAAa,CAAC,QAAS,SAAU,CAAC,WAAY,YAAa,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,QAAS,CAAC,OAAQ,QAAS,CAAC,OAAQ,UAAW,gBACpbN,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,WAA+B,SAAUC,GAAS,MAAO,IAEzDf,IAAQC,OAAR,cAAkC,CAC9BC,KAAM,WACFC,KAAKC,mBACAC,YAAY,WACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,iBAAkB,kBAAmB,CAAC,uBAAwB,wBAAyB,CAAC,SAAU,UAAW,CAAC,iBAAkB,oBAAqB,WAClMN,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,cAAkC,SAAUC,GAAS,MAAO,IAE5Df,IAAQC,OAAR,UAA8B,CAC1BC,KAAM,WACFC,KAAKC,mBACAC,YAAY,sBACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,OAAQ,QAC1GN,KAAKG,iBAAiB,QACjBU,SAAS,MACdb,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,UAA8B,SAAUC,GAAS,MAAO,IAExDf,IAAQC,OAAR,mBAAuC,CACnCC,KAAM,WACFC,KAAKC,mBACAC,YAAY,aACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,OAAQ,QAC1GN,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIxBb,IAAQc,OAAR,mBAAuC,SAAUC,GAAS,MAAO,ICvWjEf,IAAQC,OAAR,KAAyB,CACrBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,QACjBF,KAAKG,iBAAiB,YACjBU,SAAS,UACTX,YAAY,qCASjBF,KAAKG,iBAAiB,UACjBU,SAAS,UACTX,YAAY,oCACjBF,KAAKG,iBAAiB,aACjBU,SAAS,UACTX,YAAY,oCACjBF,KAAKG,iBAAiB,QACjBD,YAAY,8CACjBF,KAAKK,WAAU,GACfL,KAAKQ,UAAU,IAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAInBb,IAAQc,OAAR,KAAyB,SAAUC,GAC/B,MAAO,OAGXf,IAAQC,OAAR,OAA2B,CACzBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,qBACjBF,KAAKG,iBAAiB,QACjBU,SAAS,UACTX,YAAY,iBACjBF,KAAKK,WAAU,EAAM,aACrBL,KAAKQ,UAAU,IAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,OAA2B,SAAUC,GACjC,MAAO,OAGXf,IAAQC,OAAR,cAAkC,CAChCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,4BACjBF,KAAKG,iBAAiB,SACjBU,SAAS,UACTX,YAAY,kBACjBF,KAAKK,WAAU,EAAM,aACrBL,KAAKQ,UAAU,IAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,cAAkC,SAAUC,GACxC,MAAO,OAGXf,IAAQC,OAAR,cAAkC,CAChCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,4BACjBF,KAAKG,iBAAiB,QACjBU,SAAS,UACTX,YAAY,oBACjBF,KAAKK,WAAU,EAAM,aACrBL,KAAKQ,UAAU,IAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,cAAkC,SAAUC,GACxC,MAAO,OAGXf,IAAQC,OAAR,aAAiC,CAC/BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,iBACjBF,KAAKK,WAAU,EAAM,UACrBL,KAAKQ,UAAU,IAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,aAAiC,SAAUC,GACvC,MAAO,OAGXf,IAAQC,OAAR,MAA0B,CACxBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,iBACjBF,KAAKK,WAAU,EAAM,UACrBL,KAAKQ,UAAU,IAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,MAA0B,SAAUC,GAChC,MAAO,OCnHXf,IAAQC,OAAR,MAA0B,CACxBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,SACjBF,KAAKG,iBAAiB,QACjBU,SAAS,QACTX,YAAY,iBACjBF,KAAKG,iBAAiB,UACjBU,SAAS,MACTX,YAAY,mBACjBF,KAAKK,WAAU,EAAM,aACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,MAA0B,SAAUC,GAChC,MAAO,OAGXf,IAAQC,OAAR,SAA6B,CACzBC,KAAM,WACFC,KAAKG,iBAAiB,QACjBU,SAAS,MACTX,YAAY,iCACjBF,KAAKC,mBACAC,YAAY,WACjBF,KAAKG,iBAAiB,QACjBU,SAAS,MACTX,YAAY,gCACjBF,KAAKC,iBAAiB,yBACjBC,YAAY,2BACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIvBb,IAAQc,OAAR,SAA6B,SAAUC,GACpC,MAAO,OAGXf,IAAQC,OAAR,YAAgC,CAC9BC,KAAM,WACJC,KAAKG,iBAAiB,QACjBU,SAAS,MACTX,YAAY,wCACjBF,KAAKC,mBACAC,YAAY,YACjBF,KAAKC,iBAAiB,yBACjBC,YAAY,2BACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,WACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,WAA+B,SAAUC,GACrC,MAAO,OAgCXf,IAAQC,OAAR,GAAuB,CACrBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,MACjBF,KAAKG,iBAAiB,QACjBU,SAAS,QACTX,YAAY,iBACjBF,KAAKG,iBAAiB,UACjBU,SAAS,MACTX,YAAY,mBACjBF,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,GAAuB,SAAUC,GAC7B,MAAO,OAGXf,IAAQC,OAAR,iBAAqC,CACnCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,8BACjBF,KAAKG,iBAAiB,WACjBU,SAAS,MACTX,YAAY,4BACjBF,KAAKG,iBAAiB,QACjBU,SAAS,MACTX,YAAY,yBACjBF,KAAKG,iBAAiB,WACjBU,SAAS,MACTX,YAAY,sBACjBF,KAAKC,iBAAiB,6CACjBC,YAAY,+CACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,iBAAqC,SAAUC,GAC3C,MAAO,OAIXf,IAAQC,OAAR,cAAkC,CAChCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,4BACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQO,eAAe,aAAc,QAC1DJ,KAAKC,mBACAC,YAAY,WACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQO,eAAe,iBAAkB,SAC9DJ,KAAKC,mBACAC,YAAY,MACjBF,KAAKC,mBACAmB,SAASvB,IAAQwB,aACjBnB,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,OAAQ,QACtHJ,YAAY,QACZA,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,KAAK,QAAS,SAC7GJ,YAAY,SACZA,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,KAAK,MAAO,CAAC,KAAK,MAAO,CAAC,KAAK,QAAS,WACtGJ,YAAY,WACZA,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,QAAQ,SAAU,CAAC,SAAS,UAAW,CAAC,KAAK,QAAS,YACnGN,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,UAAU,WAAY,CAAC,UAAU,WAAY,CAAC,iBAAiB,kBAAmB,CAAC,cAAc,eAAgB,CAAC,cAAc,eAAgB,CAAC,kBAAkB,mBAAoB,CAAC,kBAAkB,mBAAoB,CAAC,aAAa,cAAe,CAAC,aAAa,gBAAiB,SACvUN,KAAKO,iBAAgB,GACrBP,KAAKC,mBACAC,YAAY,2CACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQO,eAAe,gBAAiB,SAc7DJ,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIpBb,IAAQc,OAAR,cAAkC,SAAUC,GACxC,MAAO,OAIXf,IAAQC,OAAR,UAA8B,CAC1BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,uDACjBF,KAAKC,mBACAC,YAAY,gCACjBF,KAAKG,iBAAiB,YACjBU,SAAS,MACTX,YAAY,qBACjBF,KAAKG,iBAAiB,SACjBU,SAAS,MACTX,YAAY,uBACjBF,KAAKG,iBAAiB,OACjBU,SAAS,QACTX,YAAY,qBACjBF,KAAKK,WAAU,EAAM,QACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAGnBb,IAAQc,OAAR,UAA8B,SAAUC,GACpC,MAAO,OAGXf,IAAQC,OAAR,SAA6B,CAC3BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,uCACjBF,KAAKC,mBACAC,YAAY,oBACjBF,KAAKG,iBAAiB,QACjBU,SAAS,QACTX,YAAY,+BACjBF,KAAKK,WAAU,EAAM,UACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,SAA6B,SAAUC,GACnC,MAAO,OAGXf,IAAQC,OAAR,OAA2B,CACvBC,KAAM,WACFC,KAAKC,mBACAC,YAAY,UACjBF,KAAKG,iBAAiB,QACjBU,SAAS,MACTX,YAAY,qBACjBF,KAAKC,iBAAiB,mBACjBC,YAAY,qBACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIvBb,IAAQc,OAAR,OAA2B,SAAUC,GAClC,MAAO,OAKXf,IAAQC,OAAR,SAA6B,CACzBC,KAAM,WACFC,KAAKC,mBACAC,YAAY,WACjBF,KAAKG,iBAAiB,QACjBU,SAAS,MACTX,YAAY,qBACjBF,KAAKC,iBAAiB,mBACjBC,YAAY,qBACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIvBb,IAAQc,OAAR,SAA6B,SAAUC,GACpC,MAAO,OC5RXf,IAAQC,OAAR,KAAyB,CACvBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,QAEjBF,KAAKC,mBACAmB,SAASvB,IAAQwB,aACjBnB,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,OAAQ,QACtHJ,YAAY,QACZA,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,KAAK,QAAS,SAC7GJ,YAAY,SACZA,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,KAAK,MAAO,CAAC,KAAK,MAAO,CAAC,KAAK,QAAS,WACtGJ,YAAY,WACZA,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,QAAQ,SAAU,CAAC,SAAS,UAAW,CAAC,KAAK,QAAS,YACnGN,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,UAAU,WAAY,CAAC,UAAU,WAAY,CAAC,iBAAiB,kBAAmB,CAAC,cAAc,eAAgB,CAAC,cAAc,eAAgB,CAAC,kBAAkB,mBAAoB,CAAC,kBAAkB,mBAAoB,CAAC,aAAa,cAAe,CAAC,aAAa,gBAAiB,SACvUN,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,KAAyB,SAAUC,GAE/B,MAAO,kBAIXf,IAAQC,OAAR,SAA6B,CAC3BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,cACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,OAAQ,QAC3HN,KAAKC,mBACAC,YAAY,QACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,KAAK,QAAS,SAClHN,KAAKC,mBACAC,YAAY,SACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,KAAK,MAAO,CAAC,KAAK,MAAO,CAAC,KAAK,QAAS,WAC3GN,KAAKC,mBACAC,YAAY,WACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,QAAQ,SAAU,CAAC,SAAS,UAAW,CAAC,SAAS,UAAW,CAAC,KAAK,QAAS,kBACxHN,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,SACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,SAA6B,SAAUC,GACnC,MAAO,OAGXf,IAAQC,OAAR,MAA0B,CACtBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,mBACjBF,KAAKK,WAAU,EAAM,YACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAInBb,IAAQc,OAAR,MAA0B,SAAUC,GAChC,MAAO,OAGXf,IAAQC,OAAR,OAA2B,CACzBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,oBACjBF,KAAKK,WAAU,EAAM,YACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,OAA2B,SAAUC,GACjC,MAAO,OAGXf,IAAQC,OAAR,OAA2B,CACzBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,oBACjBF,KAAKK,WAAU,EAAM,YACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,OAA2B,SAAUC,GACjC,MAAO,OAGXf,IAAQC,OAAR,GAAuB,CACrBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,gBACjBF,KAAKK,WAAU,EAAM,YACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,GAAuB,SAAUC,GAC7B,MAAO,OAGXf,IAAQC,OAAR,UAA8B,CAC5BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,oBACjBF,KAAKK,WAAU,EAAM,SACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,UAA8B,SAAUC,GACpC,MAAO,OAGXf,IAAQC,OAAR,WAA+B,CAC7BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,qBACjBF,KAAKK,WAAU,EAAM,SACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,WAA+B,SAAUC,GACrC,MAAO,OAGXf,IAAQC,OAAR,OAA2B,CACzBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,iBACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,UAAU,WAAY,CAAC,OAAO,QAAS,CAAC,OAAO,UAAW,gBACvGN,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,SACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,OAA2B,SAAUC,GACjC,MAAO,OAkBXf,IAAQC,OAAR,OAA2B,CACzBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,iBACjBF,KAAKK,WAAU,EAAM,SACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,OAA2B,SAAUC,GACjC,MAAO,OAGXf,IAAQC,OAAR,kBAAsC,CACpCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,6BACjBF,KAAKK,WAAU,EAAM,SACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,kBAAsC,SAAUC,GAC5C,MAAO,OAGXf,IAAQC,OAAR,mBAAuC,CACrCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,8BACjBF,KAAKK,WAAU,EAAM,SACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,mBAAuC,SAAUC,GAC7C,MAAO,OAGXf,IAAQC,OAAR,aAAiC,CAC/BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,uBACjBF,KAAKK,WAAU,EAAM,SACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,aAAiC,SAAUC,GACvC,MAAO,OAGXf,IAAQC,OAAR,cAAkC,CAChCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,wBACjBF,KAAKK,WAAU,EAAM,SACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,cAAkC,SAAUC,GACxC,MAAO,OAGXf,IAAQC,OAAR,KAAyB,CACvBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,eACjBF,KAAKG,iBAAiB,kBACjBU,SAAS,UACTX,YAAY,wBACjBF,KAAKK,WAAU,EAAM,SACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,KAAyB,SAAUC,GAC/B,MAAO,OAGXf,IAAQC,OAAR,aAAiC,CAC/BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,KAAK,QAAS,SACvGN,KAAKC,mBACAC,YAAY,SACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,OAAQ,QAC3HN,KAAKC,mBACAC,YAAY,QACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,KAAK,QAAS,SAClHN,KAAKC,mBACAC,YAAY,SACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,IAAI,KAAM,CAAC,IAAI,KAAM,CAAC,KAAK,MAAO,CAAC,KAAK,MAAO,CAAC,KAAK,QAAS,WAC3GN,KAAKC,mBACAC,YAAY,WACjBF,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,IAChBV,KAAKO,iBAAgB,KAItBV,IAAQc,OAAR,aAAiC,SAAUC,GACzC,MAAO,OAGTf,IAAQC,OAAR,YAAgC,CAC9BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,eACjBF,KAAKG,iBAAiB,SACjBU,SAAS,MACTX,YAAY,uBACjBF,KAAKG,iBAAiB,OACjBU,SAAS,MACTX,YAAY,qBACjBF,KAAKK,WAAU,EAAM,WACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,YAAgC,SAAUC,GACxC,MAAO,OCnUTf,IAAQC,OAAR,IAAwB,CACtBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,OACZA,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,mCAAoC,oCAAqC,CAAC,kCAAmC,mCAAoC,CAAC,yCAA0C,0CACnO,CAAC,oCAAqC,qCAAsC,CAAC,0CAA2C,2CAA4C,CAAC,uCAAwC,wCAAyC,CAAC,uCAAwC,0CAA2C,QAC5UN,KAAKO,iBAAgB,GACzBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIhBb,IAAQC,OAAO,iCAAmC,CAChDC,KAAM,WACJC,KAAKC,mBACAC,YAAY,iCACjBF,KAAKG,iBAAiB,WACbU,SAAS,UACTX,YAAY,2BACrBF,KAAKC,iBAAiB,oBACbC,YAAY,oBACjBF,KAAKO,iBAAgB,GACzBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIhBb,IAAQC,OAAO,yEAA2E,CACxFC,KAAM,WACJC,KAAKC,mBACAC,YAAY,wEACjBF,KAAKC,iBAAiB,qBACbC,YAAY,qBACjBF,KAAKO,iBAAgB,GACzBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAInBb,IAAQC,OAAR,UAA8B,CAC5BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,cACZA,YAAY,IAAIL,IAAQS,cAAc,CACrC,CAAC,eAAgB,gBACjB,CAAC,mBAAoB,oBACrB,CAAC,uBAAwB,wBACzB,CAAC,0BAA2B,2BAC5B,CAAC,cAAe,eAChB,CAAC,UAAW,WACZ,CAAC,YAAa,aACd,CAAC,QAAQ,SACT,CAAC,eAAe,kBAAmB,QACzCN,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CACrC,CAAC,MAAM,OACP,CAAC,MAAM,OACP,CAAC,OAAO,QACR,CAAC,SAAS,UACV,CAAC,WAAW,YACZ,CAAC,OAAO,QACR,CAAC,aAAa,cACd,CAAC,cAAc,eACf,CAAC,WAAW,YACZ,CAAC,aAAa,gBAAiB,QACjCN,KAAKO,iBAAgB,GACzBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAKjBb,IAAQC,OAAR,IAAwB,CACtBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,OACZA,YAAY,IAAIL,IAAQS,cAAc,CACrC,CAAC,MAAM,OACP,CAAC,kCAAmC,mCAAmC,CAAC,oCAAqC,qCAAsC,CAAC,mCAAoC,oCAExL,CAAC,6CAA6C,8CAA+C,CAAC,2DAA2D,4DAA6D,CAAC,6EAA6E,8EAA+E,CAAC,4EAA4E,6EAA8E,CAAC,+BAA+B,gCAAiC,CAAC,qCAAqC,sCAAuC,CAAC,oCAAoC,qCAAsC,CAAC,4BAA4B,6BAA8B,CAAC,0BAA0B,2BAA4B,CAAC,6BAA6B,8BAA+B,CAAC,yEAAyE,0EAA2E,CAAC,0BAA0B,6BAA8B,QACtmCN,KAAKO,iBAAgB,GACzBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIhBb,IAAQC,OAAR,MAA0B,CACxBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,SACZA,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,gBAAgB,iBAAiB,CAAC,UAAW,WAAW,CAAC,6BAA8B,8BAChI,CAAC,kDAAmD,mDAAoD,CAAC,qCAAsC,sCAC9I,CAAC,wBAAyB,yBAA0B,CAAC,+BAAgC,kCAAmC,QAC7HN,KAAKC,iBAAiB,kBACjBC,YAAY,oBACbF,KAAKO,iBAAgB,GACzBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAMjBb,IAAQC,OAAR,UAA8B,CAC7BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,aACjBF,KAAKC,iBAAiB,kBACjBC,YAAY,oBACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAKjBb,IAAQC,OAAR,IAAwB,CACtBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,OACZA,YAAY,IAAIL,IAAQS,cAAc,CACvC,CAAC,MAAM,OACP,CAAC,kCAAmC,mCACpC,CAAC,oCAAqC,qCAAsC,CAAC,mCAAoC,oCACjH,CAAC,yCAAyC,0CAA2C,CAAC,sCAAsC,uCAC5H,CAAC,qCAAqC,sCAAuC,CAAC,gCAAgC,iCAC9G,CAAC,2CAA2C,4CAA6C,CAAC,kCAAkC,mCAC3H,CAAC,+BAA+B,gCAAiC,CAAC,+BAA+B,gCAAiC,CAAC,4BAA4B,6BAC/J,CAAC,gDAAgD,iDAAkD,CAAC,gDAAgD,iDACpJ,CAAC,0CAA0C,2CAA4C,CAAC,sCAAsC,uCAC9H,CAAC,8BAA8B,+BAAgC,CAAC,4BAA4B,6BAA8B,CAAC,kCAAkC,qCAAsC,QACxMN,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAKjBb,IAAQC,OAAR,WAA+B,CAC7BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,eACZA,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,2CAA2C,+CACxFN,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CACnC,CAAC,eAAe,gBAChB,CAAC,gBAAgB,mBAAoB,QAC7CN,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,YACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQC,OAAO,mBAAqB,CAClCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,mBACZA,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,mBAAmB,oBAAoB,CAAC,kBAAmB,mBAAoB,CAAC,cAAe,eAAgB,CAAC,qBAAsB,yBACnLN,KAAKC,iBAAiB,gBACjBC,YAAY,kBACjBF,KAAKK,WAAU,EAAM,YACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAMjBb,IAAQC,OAAR,gBAAoC,CAClCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,mBACjBF,KAAKK,WAAU,EAAM,YACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQC,OAAR,oBAAwC,CACtCC,KAAM,WACFC,KAAKC,mBACAC,YAAY,uBACZA,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,aAAc,cAAe,CAAC,YAAa,aAAc,CAAC,aAAc,cAAe,CAAC,OAAQ,QAAS,CAAC,YAAa,eAAgB,QACpLN,KAAKC,iBAAiB,kBACjBC,YAAY,oBACbF,KAAKO,iBAAgB,GACzBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KACfR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAItBb,IAAQC,OAAR,UAA8B,CAC5BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,eACZA,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,2BAA2B,4BACnE,CAAC,wBAAwB,yBAC5B,CAAC,uBAAwB,0BAA2B,QAClDN,KAAKO,iBAAgB,GACzBP,KAAKC,mBACIC,YAAY,IAAIL,IAAQS,cAAc,CACrC,CAAC,eAAe,gBAChB,CAAC,gBAAgB,mBAAoB,QACvCN,KAAKO,iBAAgB,GAC7BP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAKjBb,IAAQC,OAAR,QAA4B,CAC1BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,WACZA,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,QAAQ,SAAU,CAAC,OAAO,UAAW,QAC7EJ,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,WAAW,YAAa,CAAC,WAAW,YAAa,CAAC,WAAW,YAAa,CAAC,mBAAmB,oBAAoB,CAAC,eAAgB,gBAAiB,CAAC,8CAA+C,8CAA+C,CAAC,2CAA2C,6CAA8C,QAC1XN,KAAKC,iBAAiB,kBACjBC,YAAY,oBACbF,KAAKO,iBAAgB,GACzBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQC,OAAR,WAA+B,CAC7BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,cACZA,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,aAAc,cACf,CAAC,YAAa,aACd,CAAC,aAAa,cACd,CAAC,OAAQ,UAAW,QAChEN,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,YAAa,aACd,CAAC,aAAc,cACf,CAAC,WAAW,YACZ,CAAC,YAAa,aACd,CAAC,MAAO,SAAU,QAC1DN,KAAKO,iBAAgB,GACzBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQc,OAAR,WAA+B,SAAUC,GAAS,MAAO,OACzDf,IAAQc,OAAR,IAAwB,SAAUC,GAAS,MAAO,OAClDf,IAAQc,OAAR,UAA8B,SAAUC,GAAS,MAAO,OACxDf,IAAQc,OAAR,IAAwB,SAAUC,GAAS,MAAO,OAClDf,IAAQc,OAAR,IAAwB,SAAUC,GAAS,MAAO,OAClDf,IAAQc,OAAR,MAA0B,SAAUC,GAAS,MAAO,OACpDf,IAAQc,OAAR,UAA8B,SAAUC,GAAS,MAAO,OACxDf,IAAQc,OAAR,WAA+B,SAAUC,GAAS,MAAO,OACzDf,IAAQc,OAAR,gBAAoC,SAAUC,GAAS,MAAO,OAC9Df,IAAQc,OAAR,UAA8B,SAAUC,GAAS,MAAO,OACxDf,IAAQc,OAAR,oBAAwC,SAAUC,GAAS,MAAO,OAClEf,IAAQc,OAAO,mBAAqB,SAAUC,GAAS,MAAO,OAC9Df,IAAQc,OAAR,QAA4B,SAAUC,GAAS,MAAO,OACtDf,IAAQc,OAAO,iCAAmC,SAAUC,GAAS,MAAO,OAC5Ef,IAAQc,OAAO,4EAA8E,SAAUC,GAAS,MAAO,OC7RtHf,IAAQC,OAAR,OAA2B,CACzBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,UACZA,YAAY,IAAIL,IAAQS,cAAc,CACrC,CAAC,2BAA4B,4BAC7B,CAAC,uBAAwB,0BAA2B,QAC1DN,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,WAAY,YACb,CAAC,WAAY,YACb,CAAC,MAAO,SAAU,QAC1DN,KAAKO,iBAAgB,GACzBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAKlBb,IAAQc,OAAR,OAA2B,SAAUC,GAAS,MAAO,OAIrDf,IAAQC,OAAR,MAA0B,CACxBC,KAAM,WACJC,KAAKC,mBACAC,YAAY,SACZA,YAAY,IAAIL,IAAQS,cAAc,CACrC,CAAC,6BAA8B,gCAAiC,QACtEN,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,WAAY,YACb,CAAC,WAAY,YACb,CAAC,MAAO,SAAU,QAC1DN,KAAKO,iBAAgB,GACzBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAKjBb,IAAQc,OAAR,MAA0B,SAAUC,GAAS,MAAO,O,uBC7CrC,SAASU,IACpB,OACE,gCAEE,uBAAOC,MAAO,CAACC,SAAU,QAAzB,6LACA,0BAAUD,MAAO,CAAEE,OAAQ,OAAQC,MAAO,OAAQF,SAAU,OAAQG,aAAc,GAAIC,UAAW,MAEjG,wBAAOL,MAAO,CAACC,SAAU,QAAzB,mJAAwK,uBAAxK,oJACA,0BAAUD,MAAO,CAAEE,OAAQ,OAAQC,MAAO,OAAQF,SAAU,OAAQG,aAAc,GAAIC,UAAW,MAEjG,wBAAOL,MAAO,CAACC,SAAU,QAAzB,+CAAoE,uBAApE,gFAAsJ,uBAAtJ,4IACA,0BAAUD,MAAO,CAAEE,OAAQ,OAAQC,MAAO,OAAQF,SAAU,OAAQI,UAAW,GAAID,aAAc,S,qBCTxG9B,IAAQC,OAAR,QAA4B,CAC1BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,OAAQ,QACT,CAAC,WAAY,YACb,CAAC,WAAY,cAAe,QACxEN,KAAKC,mBACAC,YAAY,UACZA,YAAY,IAAIL,IAAQS,cAAc,CACrC,CAAC,kBAAmB,qBAAsB,QAE5CN,KAAKO,iBAAgB,GACzBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAMlBb,IAAQC,OAAR,YAAgC,CAC9BC,KAAM,WACJC,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,OAAQ,QACT,CAAC,WAAY,YACb,CAAC,WAAY,cAAe,QACxEN,KAAKC,mBACAC,YAAY,cACZA,YAAY,IAAIL,IAAQS,cAAc,CACrC,CAAC,kBAAmB,mBACpB,CAAC,0BAA2B,2BAC5B,CAAC,2BAA4B,4BAC7B,CAAC,qBAAsB,sBACvB,CAAC,yBAA0B,0BAC3B,CAAC,qBAAsB,sBACvB,CAAC,qDAAsD,sDACvD,CAAC,mCAAoC,oCACrC,CAAC,6BAA8B,gCAAiC,QAClEN,KAAKO,iBAAgB,GACzBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAKjBb,IAAQC,OAAR,sBAA0C,CACxCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,wBACjBF,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAGjBb,IAAQC,OAAR,4BAAgD,CAC9CC,KAAM,WACJC,KAAKC,mBACAC,YAAY,+BACjBF,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAGjBb,IAAQC,OAAR,gBAAoC,CAClCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,uBACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQO,eAAe,cAAe,QAC3DJ,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAGjBb,IAAQC,OAAR,kBAAsC,CACpCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,4CACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAGjBb,IAAQC,OAAR,mBAAuC,CACrCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,sBACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAGjBb,IAAQC,OAAR,mBAAuC,CACrCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,uCACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,KAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAGjBb,IAAQC,OAAR,kBAAsC,CACpCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,mBACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQS,cAAc,CAAC,CAAC,SAAS,UAAW,CAAC,YAAY,aAAc,CAAC,SAAS,YAAa,iBACnHN,KAAKC,mBACAC,YAAY,YACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQC,OAAR,2BAA+C,CAC7CC,KAAM,WACJC,KAAKC,mBACAC,YAAY,8BACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAGjBb,IAAQC,OAAR,8BAAkD,CAChDC,KAAM,WACJC,KAAKC,mBACAC,YAAY,iCACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAGjBb,IAAQC,OAAR,0BAA8C,CAC5CC,KAAM,WACJC,KAAKC,mBACAC,YAAY,6BACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAGjBb,IAAQC,OAAR,4BAAgD,CAC9CC,KAAM,WACJC,KAAKC,mBACAC,YAAY,+BACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAGjBb,IAAQC,OAAR,+BAAmD,CACjDC,KAAM,WACJC,KAAKC,mBACAC,YAAY,kCACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAGjBb,IAAQC,OAAR,2BAA+C,CAC7CC,KAAM,WACJC,KAAKC,mBACAC,YAAY,8BACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQC,OAAR,gBAAoC,CAClCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,qBACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQO,eAAe,aAAc,QAC1DJ,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAGjBb,IAAQC,OAAR,qBAAyC,CACvCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,qCACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQO,eAAe,+BAAgC,QAC5EJ,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQC,OAAR,mBAAuC,CACrCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,qBACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQO,eAAe,cAAe,QAC3DJ,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQC,OAAR,yBAA6C,CAC3CC,KAAM,WACJC,KAAKC,mBACAC,YAAY,wCACjBF,KAAKC,mBACAC,YAAY,IAAIL,IAAQO,eAAe,cAAe,QAC3DJ,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQC,OAAR,oBAAwC,CACtCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,0BACjBF,KAAKO,iBAAgB,GACrBP,KAAKK,WAAU,EAAM,MACrBL,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAMjBb,IAAQC,OAAR,iBAAqC,CACnCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,yCACjBF,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQC,OAAR,mBAAuC,CACrCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,2CACjBF,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQC,OAAR,mBAAuC,CACrCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,2CACjBF,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQC,OAAR,uBAA2C,CACzCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,+CACjBF,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQC,OAAR,mBAAuC,CACrCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,2CACjBF,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MAIjBb,IAAQC,OAAR,kBAAsC,CACpCC,KAAM,WACJC,KAAKC,mBACAC,YAAY,0CACjBF,KAAKQ,UAAU,WAClBR,KAAKS,WAAW,IAChBT,KAAKU,WAAW,MCrUjB,IAAMmB,EAAmB,CACrB,CACEC,KAAM,QACNC,OAAQ,UACRC,OAAQ,CACN,CAACC,KAAM,MACP,CAACA,KAAM,OACP,CAACA,KAAM,OACP,CAACA,KAAM,MACP,CAACA,KAAM,mBAKX,CACEH,KAAM,OACNC,OAAQ,UACRC,OAAQ,CAAC,CAAEC,KAAM,UAEnB,CACEH,KAAM,OACNC,OAAQ,UACRC,OAAQ,CACN,CAAEC,KAAM,cACR,CAAEA,KAAM,eACR,CAAEA,KAAM,YACR,CAAEA,KAAM,eACR,CAAEA,KAAM,OACR,CAAEA,KAAM,YACR,CAAEA,KAAM,gBACR,CAAEA,KAAM,eAGZ,CACEH,KAAM,SACNC,OAAQ,UACRC,OAAQ,CACN,CAACC,KAAM,qBACP,CAACA,KAAM,mBACP,CAACA,KAAM,wBACP,CAACA,KAAM,mBAIX,CACEH,KAAM,SACNC,OAAQ,UACRC,OAAQ,CAEN,CAACC,KAAM,oBAEP,CAACA,KAAM,+BACP,CAACA,KAAM,yBACP,CAACA,KAAM,8BACP,CAACA,KAAM,iCACP,CAACA,KAAM,6BACP,CAACA,KAAM,+BACP,CAACA,KAAM,kCACP,CAACA,KAAM,8BAEP,CAACA,KAAM,sBACP,CAACA,KAAM,mBACP,CAACA,KAAM,wBAIX,CACEH,KAAM,QACNC,OAAQ,UACRC,OAAQ,CACN,CAACC,KAAM,sBAEP,CAACA,KAAM,WAEP,CAACA,KAAM,0BACP,CAACA,KAAM,eACP,CAACA,KAAM,4BACP,CAACA,KAAM,uBAEP,CAACA,KAAM,sBACP,CAACA,KAAM,sBACP,CAACA,KAAM,uBAiEX,CACEH,KAAM,WACNC,OAAQ,UACRC,OAAQ,CACN,CAAEC,KAAM,OACR,CAAEA,KAAM,sBAGZ,CACEH,KAAM,OACNC,OAAQ,UACRC,OAAQ,CACN,CAAEC,KAAM,WC9ID,SAASC,IAepB,OACE,qBAAKX,MAAS,CAACI,aAAc,GAAIC,UAAW,IAA5C,SACE,cAAC,IAAD,CACIO,kBAAmBN,EACnBO,WAfR,uHAgBQC,oBAAoB,cACpBC,uBACA,CAYIC,KAAM,CACNC,UAAU,EACVC,OAAO,EACPC,WAAY,EACZC,SAAU,EACVC,SAAU,GACVC,WAAY,IACZC,OAAO,IAOXC,mBA1CR,SAA4BC,GACTnD,IAAQoD,IAAIC,UAAUrD,IAAQoD,IAAIE,eAAeH,SCvBxE,IAAMI,EAAkB,CAoBpB,CACEtB,KAAM,gBACNC,OAAQ,UACRC,OAAQ,CAAC,CAAEC,KAAM,UAEnB,CACEH,KAAM,OACNC,OAAQ,UACRC,OAAQ,CAAC,CAAEC,KAAM,UAEnB,CACEH,KAAM,SACNC,OAAQ,UACRC,OAAQ,CAAC,CAAEC,KAAM,gBAAkB,CAAEA,KAAM,WAE7C,CACEH,KAAM,OACNC,OAAQ,UACRC,OAAQ,CACN,CAAEC,KAAM,WC3BD,SAASoB,IAepB,OACE,qBAAK9B,MAAS,CAACK,UAAW,IAA1B,SACE,cAAC,IAAD,CACIO,kBAAmBiB,EACnBhB,WAfR,uHAgBQC,oBAAoB,OACpBC,uBACA,GAeAS,mBA/BR,SAA4BC,GACTnD,IAAQoD,IAAIC,UAAUrD,IAAQoD,IAAIE,eAAeH,S,uDCelEM,EAAU,CACd,CAAEC,MAAO,KAAMC,MAAO,kBACtB,CAAED,MAAO,KAAMC,MAAO,wBACtB,CAAED,MAAO,KAAMC,MAAO,UACtB,CAAED,MAAO,KAAMC,MAAO,kBACtB,CAAED,MAAO,KAAMC,MAAO,wBACtB,CAAED,MAAO,KAAMC,MAAO,yBACtB,CAAED,MAAO,KAAMC,MAAO,wBACtB,CAAED,MAAO,KAAMC,MAAO,4BACtB,CAAED,MAAO,MAAOC,MAAO,mCACvB,CAAED,MAAO,KAAMC,MAAO,aACtB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,WAAYC,MAAO,aAGf,SAASC,IAEtB,OACE,qBAAKlC,MAAO,CAAgCmC,WAAW,GAAIC,YAAY,GAAI/B,UAAU,GAAGD,aAAa,IAArG,SAGE,eAACiC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UAEE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UAEE,cAAC1C,EAAD,IACA,uBAAOC,MAAO,CAACC,SAAU,QAAzB,+IACA,cAAC,IAAD,CAAQ8B,QAAWA,EAAS/B,MAAO,CAACC,SAAU,OAAQI,UAAW,IAAKqC,YAAc,iCAAiCC,SAAO,OAI9H,eAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UAEE,wBAAOzC,MAAO,CAACC,SAAU,OAAQG,aAAc,IAA/C,4BAAmE,uBAAnE,4OACA,cAACO,EAAD,IAMA,wBAAOX,MAAO,CAACC,SAAU,OAAQG,aAAc,IAA/C,4BAAmE,uBAAnE,oQACA,qBAAKJ,MAAO,CAAEG,MAAO,OAAQyC,SAAU,OAAQC,QAAS,QAAxD,SACGC,IAAIC,IAAM,KAAK,SAAAC,GAAC,OACf,cAAC,EAAD,iBAYd,IAAMC,EAAY,WAChB,OACE,qBAAKjD,MAAO,CAAEE,OAAQ,QAASC,MAAO,QAAS+C,OAAQ,QAAvD,SAEE,cAACpB,EAAD,OClGSqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6ce8924a.chunk.js","sourcesContent":["import Blockly from 'blockly';\nimport 'blockly/python';\n\nBlockly.Blocks['if'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"If \");\n        this.appendValueInput(\"condition\")\n            //.setCheck(\"Boolean\")\n            .appendField(\"(input: condition)\");\n        this.appendDummyInput()\n            .appendField(\"Then send a Slack message to\");\n        this.appendDummyInput()\n            .appendField(new Blockly.FieldTextInput(\"type name\"), \"NAME\");\n        this.appendDummyInput()\n            .appendField(\"saying\");\n        this.appendDummyInput()\n            .appendField(new Blockly.FieldTextInput(\"type suggestion\"), \"NAME1\");\n        /*\n        this.appendValueInput(\"message1\")\n            .setCheck(\"String\")\n            .appendField(\"         text - suggested actions\");\n        this.appendValueInput(\"recipient\")\n            .setCheck(\"String\")\n            .appendField(\"         text - recipient's name\");\n        this.appendDummyInput(\"time\")\n            .appendField(\"         time block - when to send message\");\n        */\n        this.setOutput(false);\n        this.appendDummyInput()\n            .appendField(\"\")\n            .appendField(new Blockly.FieldDropdown([\n              [\"At\", \"At\"],\n              [\"Before\", \"Before\"],\n              [\"After\",\"After\"]]), \"NAME4\");\n            this.setInputsInline(false);\n        this.appendDummyInput()\n            .appendField(\"\")\n            .appendField(new Blockly.FieldDropdown([\n              [\"Half way through the sprint\", \"Half way through the sprint\"],\n              [\"The end of the sprint\", \"The end of the sprint\"],\n            [\"First SIG of sprint\", \"First SIG of sprint\"],\n          [\"First Studio of sprint\", \"First Studio of sprint\"],\n              [\"Second SIG of sprint\", \"Second SIG of sprint\"],\n              [\"Second Studio of sprint\", \"Second Studio of sprint\"],\n              [\"Second OH of sprint\", \"Second OH of sprint\"]]), \"NAME5\");\n            this.setInputsInline(false);\n        /*\n        this.appendValueInput(\"do1\")\n            .setCheck(null)\n            .appendField(\"(input: action)\");\n        this.appendValueInput(\"else\")\n            .setCheck(null)\n            .appendField(\"else: \");\n        this.appendValueInput(\"do2\")\n            .setCheck(null)\n            .appendField(\"(input: action)\");\n        */\n        this.setOutput(false);\n        this.setColour(210);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['if'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['not'] = {\n    init: function () {\n        this.appendValueInput(\"not\")\n            .setCheck(null)\n            .appendField(\"not\");\n            //.appendField(\"(output: boolean)\");\n        this.setOutput(true, \"Boolean\");\n        this.setColour(210);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['not'] = function (block) {\n    return \"...\";\n};\n\n\nBlockly.Blocks['new_boundary_function'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(new Blockly.FieldTextInput(\"Boundary Function Name\"), \"Name\");\n        this.appendStatementInput(\"Content\")\n            .setCheck(null);\n        this.setInputsInline(true);\n        this.setColour(315);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['new_boundary_function'] = function (block) {\n    var text_name = block.getFieldValue('Name');\n    var statements_content = Blockly.Python.statementToCode(block, 'Content');\n    // TODO: Assemble Python into code variable.\n    var code = 'def ' + text_name + '(_object,**kwargs):\\n' + statements_content + '\\n';\n    return code;\n};\n\nBlockly.Blocks['return'] = {\n    init: function () {\n        this.appendValueInput(\"NAME\")\n            .setCheck(null)\n            .appendField(\"return\");\n        this.setInputsInline(false);\n        this.setPreviousStatement(true, null);\n        this.setColour(330);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['return'] = function (block) {\n    var value_name = Blockly.Python.valueToCode(block, 'NAME', Blockly.Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = 'return ' + value_name + '\\n';\n    return code;\n};\n\nBlockly.Blocks['set'] = {\n    init: function () {\n        this.appendValueInput(\"name\")\n            .setCheck(null)\n            .appendField(\"set\");\n        this.appendValueInput(\"set\")\n            .setCheck(null)\n            .appendField(\"to\");\n        this.setInputsInline(true);\n        this.setColour(160);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['set'] = function (block) { return \"\"; };\n\nBlockly.Blocks['concept_variable'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"Concept Variable\");\n        this.appendValueInput(\"set\")\n            .setCheck(\"String\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(160);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['concept_variable'] = function (block) { return \"\"; };\n\nBlockly.Blocks['and'] = {\n    init: function () {\n        this.appendValueInput(\"left\")\n        this.appendValueInput(\"right\")\n            .appendField(\"AND\");\n            //.appendField(\"(output: boolean)\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(210);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['and'] = function (block) { return \"\"; };\n\nBlockly.Blocks['or'] = {\n    init: function () {\n        this.appendValueInput(\"left\")\n            .setCheck(null);\n        this.appendValueInput(\"right\")\n            .setCheck(null)\n            .appendField(\"OR\");\n            //.appendField(\"(output: boolean)\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(210);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['or'] = function (block) { return \"\"; };\n\nBlockly.Blocks['addition'] = {\n    init: function () {\n        this.appendValueInput(\"left\")\n            .setCheck(null);\n        this.appendValueInput(\"right\")\n            .setCheck(null)\n            .appendField(\"+\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(230);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['addition'] = function (block) { return \"\"; };\n\nBlockly.Blocks['subtraction'] = {\n    init: function () {\n        this.appendValueInput(\"left\")\n            .setCheck(null);\n        this.appendValueInput(\"right\")\n            .setCheck(null)\n            .appendField(\"-\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(230);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['subtraction'] = function (block) { return \"\"; };\n\nBlockly.Blocks['greater_than'] = {\n    init: function() {\n      this.appendValueInput(\"NAME\")\n          .setCheck(null);\n      this.appendValueInput(\"NAME\")\n          .setCheck(null)\n          .appendField(\">\");\n      this.setInputsInline(true);\n      this.setOutput(true, null);\n      this.setColour(230);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blockly.Python['greater_than'] = function (block) { return \"\"; };\n\n  Blockly.Blocks['less_than'] = {\n    init: function() {\n      this.appendValueInput(\"NAME\")\n          .setCheck(null);\n      this.appendValueInput(\"NAME\")\n          .setCheck(null)\n          .appendField(\"<\");\n      this.setInputsInline(true);\n      this.setOutput(true, null);\n      this.setColour(230);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blockly.Python['less_than'] = function (block) { return \"\"; };\n\n\nBlockly.Blocks['abs'] = {\n    init: function () {\n        this.appendValueInput(\"NAME\")\n            .setCheck(null)\n            .appendField(\"Abs\");\n        this.setInputsInline(false);\n        this.setOutput(true, null);\n        this.setColour(230);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['abs'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['negative'] = {\n    init: function () {\n        this.appendValueInput(\"NAME\")\n            .setCheck(null)\n            .appendField(\"-\");\n        this.setInputsInline(false);\n        this.setOutput(true, null);\n        this.setColour(230);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['negative'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['individual'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"student\");\n        this.appendDummyInput()\n            .appendField(new Blockly.FieldDropdown([[\"Aimee\", \"Aimee\"], [\"Ariella\", \"Ariella\"], [\"Ava\", \"Ava\"], [\"Charlotte\", \"Charlotte\"], [\"Gobi\", \"Gobi\"], [\"Grace\", \"Grace\"], [\"Hang\", \"Hang\"], [\"Harrison\", \"Harrison\"], [\"Jason\", \"Jason\"], [\"Jonathan\", \"Jonathan\"], [\"Kapil\", \"Kapil\"], [\"Kevin\", \"Kevin\"], [\"Leesha\", \"Leesha\"], [\"Mason\", \"Mason\"], [\"Molly\", \"Molly\"], [\"Neha\", \"Neha\"], [\"Nina\", \"Nina\"], [\"Roxy\", \"Roxy\"], [\"Ryan\", \"Ryan\"]]), \"student_name\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(260);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['individual'] = function (block) { return \"\"; };\n\nBlockly.Blocks['project_group'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"project\");\n        this.appendDummyInput()\n            .appendField(new Blockly.FieldDropdown([[\"Knowledge Maps\", \"Knowledge Maps\"], [\"Scaffolded Exercises\", \"Scaffolded Exercises\"], [\"Weekly\", \"Weekly\"], [\"Skill Tracking\", \"Skill Tracking\"]]), \"project\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(260);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['project_group'] = function (block) { return \"\"; };\n\nBlockly.Blocks['situation'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"Situation(boolean)\");\n        this.appendDummyInput()\n            .appendField(new Blockly.FieldDropdown([[\"1\", \"1\"], [\"2\", \"2\"], [\"3\", \"3\"], [\"4\", \"4\"], [\"5\", \"5\"]]), \"NAME\");\n        this.appendValueInput(\"NAME\")\n            .setCheck(null);\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(120);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['situation'] = function (block) { return \"\"; };\n\nBlockly.Blocks['situation_instance'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"Situation\");\n        this.appendDummyInput()\n            .appendField(new Blockly.FieldDropdown([[\"1\", \"1\"], [\"2\", \"2\"], [\"3\", \"3\"], [\"4\", \"4\"], [\"5\", \"5\"]]), \"NAME\");\n        this.setInputsInline(true);\n        this.setOutput(true, null);\n        this.setColour(120);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Python['situation_instance'] = function (block) { return \"\"; };\n","import Blockly from 'blockly';\nimport 'blockly/python';\n\nBlockly.Blocks['send'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"send\");\n      this.appendValueInput(\"message1\")\n          .setCheck(\"String\")\n          .appendField(\"         text - suggested actions\");\n    /*\n      this.appendValueInput(\"message2\")\n          .setCheck(\"String\")\n          .appendField(\"(input: underlying strategy)\");\n      this.appendValueInput(\"recipient\")\n          .setCheck(\"recipient\")\n          .appendField(\"(input: recipient)\");\n    */\n      this.appendValueInput(\"medium\")\n          .setCheck(\"medium\")\n          .appendField(\"         medium - slack or email\");\n      this.appendValueInput(\"recipient\")\n          .setCheck(\"String\")\n          .appendField(\"         text - recipient's name\");\n      this.appendValueInput(\"time\")\n          .appendField(\"         time block - when to send message\");\n      this.setOutput(false);\n      this.setColour(20);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\nBlockly.Python['send'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['person'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Recipient: Person\");\n    this.appendValueInput(\"name\")\n        .setCheck(\"String\")\n        .appendField(\"(input: name)\");\n    this.setOutput(true, \"recipient\");\n    this.setColour(20);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['person'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['email_address'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Recipient: Email Address\");\n    this.appendValueInput(\"email\")\n        .setCheck(\"String\")\n        .appendField(\"(input: email)\");\n    this.setOutput(true, \"recipient\");\n    this.setColour(20);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['email_address'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['slack_channel'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Recipient: Slack Channel\");\n    this.appendValueInput(\"name\")\n        .setCheck(\"String\")\n        .appendField(\"(input: channel)\");\n    this.setOutput(true, \"recipient\");\n    this.setColour(20);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['slack_channel'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['slack_medium'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Medium: Slack\");\n    this.setOutput(true, \"medium\");\n    this.setColour(20);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['slack_medium'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['email'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Medium: Email\");\n    this.setOutput(true, \"medium\");\n    this.setColour(20);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['email'] = function (block) {\n    return \"...\";\n};\n","import Blockly from 'blockly';\nimport 'blockly/python';\n\nBlockly.Blocks['every'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Every\");\n    this.appendValueInput(\"time\")\n        .setCheck(\"time\")\n        .appendField(\"(input: time)\");\n    this.appendValueInput(\"action\")\n        .setCheck(null)\n        .appendField(\"(input: action)\");\n    this.setOutput(true, \"recipient\");\n    this.setColour(120);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['every'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['contains'] = {\n    init: function () {\n        this.appendValueInput(\"NAME\")\n            .setCheck(null)\n            .appendField(\"            Does (resource 1)\");\n        this.appendDummyInput()\n            .appendField(\"Contain\");\n        this.appendValueInput(\"blah\")\n            .setCheck(null)\n            .appendField(\"                     (text)?\");\n        this.appendDummyInput(\"output: true or false\")\n            .appendField(\"(output: true or false)\");\n        this.setInputsInline(false);\n        this.setOutput(true, null);\n        this.setColour(120);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n };\n\n Blockly.Python['contains'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['was_updated'] = {\n  init: function() {\n    this.appendValueInput(\"NAME\")\n        .setCheck(null)\n        .appendField(\"                      Was (resource)\");\n    this.appendDummyInput()\n        .appendField(\"Updated?\");\n    this.appendDummyInput(\"output: true or false\")\n        .appendField(\"(output: true or false)\");\n    this.setInputsInline(false);\n    this.setOutput(true, \"Boolean\");\n    this.setColour(120);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['wasUpdated'] = function (block) {\n    return \"...\";\n};\n\n/*\nBlockly.Blocks['wasupdatedv1'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"wasUpdated\");\n    this.appendValueInput(\"resource\")\n        .setCheck(null)\n        .appendField(\"(input: resource)\");\n    this.appendDummyInput()\n        .appendField(\"(output: boolean)\");\n    this.setInputsInline(false);\n    /*\n    this.appendValueInput(\"time_period\")\n        .setCheck(null)\n        .appendField(\"(input: time period)\");\n\n    this.setOutput(true, \"Boolean\");\n    this.setColour(120);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\n\nBlockly.Python['wasupdatedv1'] = function (block) {\n    return \"...\";\n};\n*/\n\nBlockly.Blocks['At'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"At\");\n    this.appendValueInput(\"time\")\n        .setCheck(\"time\")\n        .appendField(\"(input: time)\");\n    this.appendValueInput(\"action\")\n        .setCheck(null)\n        .appendField(\"(input: action)\");\n    this.setOutput(true, null);\n    this.setColour(120);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['At'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['tf_slack_message'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"True / False Slack Message\");\n    this.appendValueInput(\"message\")\n        .setCheck(null)\n        .appendField(\"(input: message to send)\");\n    this.appendValueInput(\"time\")\n        .setCheck(null)\n        .appendField(\"(input: time to send)\");\n    this.appendValueInput(\"message\")\n        .setCheck(null)\n        .appendField(\"(input: recipient)\");\n    this.appendDummyInput(\"output: recipient responded true or false\")\n        .appendField(\"(output: recipient responded true or false)\");\n    this.setInputsInline(false);\n    this.setOutput(true, null);\n    this.setColour(120);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['tf_slack_message'] = function (block) {\n    return \"...\";\n};\n\n\nBlockly.Blocks['slack_message'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Send a slack message to \");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldTextInput(\"type name\"), \"NAME\");\n    this.appendDummyInput()\n        .appendField(\"asking \");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldTextInput(\"type question\"), \"NAME1\");\n    this.appendDummyInput()\n        .appendField(\"at\");\n    this.appendDummyInput()\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"1\",\"1\"], [\"2\",\"2\"], [\"3\",\"3\"], [\"4\",\"4\"], [\"5\",\"5\"], [\"6\",\"6\"]]), \"days\")\n        .appendField(\"days\")\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"1\",\"1\"], [\"2\",\"2\"], [\"3\",\"3\"], [\"6\",\"6\"], [\"12\",\"12\"]]), \"hours\")\n        .appendField(\"hours\")\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"5\",\"5\"], [\"15\",\"15\"], [\"30\",\"30\"], [\"45\",\"45\"]]), \"minutes\")\n        .appendField(\"minutes\")\n        .appendField(new Blockly.FieldDropdown([[\"after\",\"after\"], [\"before\",\"before\"], [\"at\",\"at\"]]), \"relation\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"1st SIG\",\"1st SIG\"], [\"2nd SIG\",\"2nd SIG\"], [\"current sprint\",\"current sprint\"], [\"last sprint\",\"last sprint\"], [\"next sprint\",\"next sprint\"], [\"1st Office Hour\",\"1st Office Hour\"], [\"2nd Office Hour\",\"2nd Office Hour\"], [\"1st Studio\",\"1st Studio\"], [\"2nd Studio\",\"2nd Studio\"]]), \"event\");\n    this.setInputsInline(false);\n    this.appendDummyInput()\n        .appendField(\", then check if this message contains: \");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldTextInput(\"type keyword\"), \"NAME2\");\n    /*\n    this.appendValueInput(\"message\")\n        .setCheck(null)\n        .appendField(\"         text - question to ask\");\n    this.appendValueInput(\"time\")\n        .setCheck(null)\n        .appendField(\"         time block - when to send\");\n    this.appendValueInput(\"message\")\n        .setCheck(null)\n        .appendField(\"         text - recipient's name\");\n    this.appendDummyInput(\"output: text - recipient's response\")\n        .appendField(\"(output: text - recipient's response)\");\n    */\n    this.setInputsInline(false);\n    this.setOutput(true, null);\n    this.setColour(120);\n    this.setTooltip(\"\");\n    this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['slack_message'] = function (block) {\n    return \"...\";\n};\n\n\nBlockly.Blocks['timestamp'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"Timestamps when updated(output: list of timestamps)\");\n      this.appendDummyInput()\n          .appendField(\"(output: list of timestamps)\");\n      this.appendValueInput(\"resource\")\n          .setCheck(null)\n          .appendField(\"(input: resource)\");\n      this.appendValueInput(\"start\")\n          .setCheck(null)\n          .appendField(\"(input: start time)\");\n      this.appendValueInput(\"end\")\n          .setCheck(\"time\")\n          .appendField(\"(input: end time)\");\n      this.setOutput(true, \"list\");\n      this.setColour(120);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\nBlockly.Python['timestamp'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['distinct'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Count distinct days(output: number)\");\n    this.appendDummyInput()\n        .appendField(\"(output: number)\");\n    this.appendValueInput(\"list\")\n        .setCheck(\"list\")\n        .appendField(\"(input: list of timestamps)\");\n    this.setOutput(true, \"Number\");\n    this.setColour(120);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['distinct'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['filled'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"filled\");\n        this.appendValueInput(\"NAME\")\n            .setCheck(null)\n            .appendField(\"(input: resource)\");\n        this.appendDummyInput(\"output: boolean\")\n            .appendField(\"(output: boolean)\");\n        this.setInputsInline(false);\n        this.setOutput(true, null);\n        this.setColour(120);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n };\n\n Blockly.Python['filled'] = function (block) {\n    return \"...\";\n};\n\n\n\nBlockly.Blocks['was_read'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(\"wasRead\");\n        this.appendValueInput(\"NAME\")\n            .setCheck(null)\n            .appendField(\"(input: resource)\");\n        this.appendDummyInput(\"output: boolean\")\n            .appendField(\"(output: boolean)\");\n        this.setInputsInline(false);\n        this.setOutput(true, null);\n        this.setColour(120);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n };\n\n Blockly.Python['was_read'] = function (block) {\n    return \"...\";\n};\n","import Blockly from 'blockly';\nimport 'blockly/python';\n\nBlockly.Blocks['time'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"time\");\n\n    this.appendDummyInput()\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"1\",\"1\"], [\"2\",\"2\"], [\"3\",\"3\"], [\"4\",\"4\"], [\"5\",\"5\"], [\"6\",\"6\"]]), \"days\")\n        .appendField(\"days\")\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"1\",\"1\"], [\"2\",\"2\"], [\"3\",\"3\"], [\"6\",\"6\"], [\"12\",\"12\"]]), \"hours\")\n        .appendField(\"hours\")\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"5\",\"5\"], [\"15\",\"15\"], [\"30\",\"30\"], [\"45\",\"45\"]]), \"minutes\")\n        .appendField(\"minutes\")\n        .appendField(new Blockly.FieldDropdown([[\"after\",\"after\"], [\"before\",\"before\"], [\"at\",\"at\"]]), \"relation\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"1st SIG\",\"1st SIG\"], [\"2nd SIG\",\"2nd SIG\"], [\"current sprint\",\"current sprint\"], [\"last sprint\",\"last sprint\"], [\"next sprint\",\"next sprint\"], [\"1st Office Hour\",\"1st Office Hour\"], [\"2nd Office Hour\",\"2nd Office Hour\"], [\"1st Studio\",\"1st Studio\"], [\"2nd Studio\",\"2nd Studio\"]]), \"event\");\n    this.setOutput(true, null);\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['time'] = function (block) {\n\n    return \"time_in_python\";\n};\n\n\nBlockly.Blocks['modifier'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Modifier: \");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"1\",\"1\"], [\"2\",\"2\"], [\"3\",\"3\"], [\"4\",\"4\"], [\"5\",\"5\"], [\"6\",\"6\"]]), \"days\");\n    this.appendDummyInput()\n        .appendField(\"days\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"1\",\"1\"], [\"2\",\"2\"], [\"3\",\"3\"], [\"6\",\"6\"], [\"12\",\"12\"]]), \"hours\");\n    this.appendDummyInput()\n        .appendField(\"hours\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"5\",\"5\"], [\"15\",\"15\"], [\"30\",\"30\"], [\"45\",\"45\"]]), \"minutes\");\n    this.appendDummyInput()\n        .appendField(\"minutes\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"after\",\"after\"], [\"before\",\"before\"], [\"during\",\"during\"], [\"at\",\"at\"]]), \"which_modifier\");\n    this.setInputsInline(false);\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['modifier'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['after'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"Modifier: After\");\n      this.setOutput(true, \"modifier\");\n      this.setColour(330);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\nBlockly.Python['after'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['before'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Modifier: Before\");\n    this.setOutput(true, \"modifier\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['before'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['during'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Modifier: During\");\n    this.setOutput(true, \"modifier\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['during'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['at'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Modifier: At\");\n    this.setOutput(true, \"modifier\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['at'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['first_sig'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: First SIG\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['first_sig'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['second_sig'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: Second SIG\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['second_sig'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['sprint'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: Sprint\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"current\",\"current\"], [\"last\",\"last\"], [\"next\",\"next\"]]), \"which_sprint\");\n    this.setInputsInline(true);\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['sprint'] = function (block) {\n    return \"...\";\n};\n\n/*Blockly.Blocks['days_of_the_week'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: Days of the week\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['days_of_the_week'] = function (block) {\n    return \"...\";\n};\n*/\nBlockly.Blocks['mysore'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: Mysore\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['mysore'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['first_office_hour'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: First Office hours\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['first_office_hour'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['second_office_hour'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: Second Office hours\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['second_office_hour'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['first_studio'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: First Studio\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['first_studio'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['second_studio'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: Second Studio\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['second_studio'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['week'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Event: week\");\n    this.appendValueInput(\"number_of_week\")\n        .setCheck(\"Number\")\n        .appendField(\"(input: week number)\");\n    this.setOutput(true, \"event\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['week'] = function (block) {\n    return \"...\";\n};\n\nBlockly.Blocks['time_elapsed'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"1\",\"1\"], [\"2\",\"2\"], [\"5\",\"5\"], [\"10\",\"10\"]]), \"weeks\");\n    this.appendDummyInput()\n        .appendField(\"weeks\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"1\",\"1\"], [\"2\",\"2\"], [\"3\",\"3\"], [\"4\",\"4\"], [\"5\",\"5\"], [\"6\",\"6\"]]), \"days\");\n    this.appendDummyInput()\n        .appendField(\"days\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"1\",\"1\"], [\"2\",\"2\"], [\"3\",\"3\"], [\"6\",\"6\"], [\"12\",\"12\"]]), \"hours\");\n    this.appendDummyInput()\n        .appendField(\"hours\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"0\",\"0\"], [\"5\",\"5\"], [\"15\",\"15\"], [\"30\",\"30\"], [\"45\",\"45\"]]), \"minutes\");\n    this.appendDummyInput()\n        .appendField(\"minutes\");\n    this.setOutput(true, null);\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n this.setInputsInline(true);\n  }\n};\n\nBlockly.Python['time_elapsed'] = function (block) {\n  return \"...\";\n};\n\nBlockly.Blocks['time_period'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Time period\");\n    this.appendValueInput(\"start\")\n        .setCheck(null)\n        .appendField(\"(input: start time)\");\n    this.appendValueInput(\"end\")\n        .setCheck(null)\n        .appendField(\"(input: end time)\");\n    this.setOutput(true, \"Boolean\");\n    this.setColour(330);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Python['time_period'] = function (block) {\n  return \"...\";\n};\n","import Blockly from 'blockly';\nimport 'blockly/python';\n\nBlockly.Blocks['ipm'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"ipm\")\n        .appendField(new Blockly.FieldDropdown([[\"module -> topic (output: string)\", \"module -> topic (output: string)\"], [\"module -> Type (output: string)\", \"module -> Type (output: string)\"], [\"module -> description (output: string)\", \"module -> description (output: string)\"],\n          [\"module -> read? (output: boolean)\", \"module -> read? (output: boolean)\"], [\"module -> understood? (output: boolean)\", \"module -> understood? (output: boolean)\"], [\"module -> applied? (output: boolean)\", \"module -> applied? (output: boolean)\"], [\"module -> questions (output: string)\", \"module -> questions (output: string)\"]]), \"NAME\");\n        this.setInputsInline(false);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n };\n\n Blockly.Blocks['student response to slack bot'] = {\n   init: function() {\n     this.appendDummyInput()\n         .appendField(\"student response to slack bot\");\n     this.appendValueInput(\"message\")\n             .setCheck(\"String\")\n             .appendField(\"(input: slack bot name)\");\n     this.appendDummyInput(\"(output: string)\")\n             .appendField(\"(output: string)\");\n         this.setInputsInline(false);\n     this.setOutput(true, null);\n     this.setColour(290);\n  this.setTooltip(\"\");\n  this.setHelpUrl(\"\");\n   }\n  };\n\n  Blockly.Blocks['detection triggered - mentor wants response triggered (true or false)'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"detection triggered - mentor wants response triggered (true or false\");\n      this.appendDummyInput(\"(output: boolean)\")\n              .appendField(\"(output: boolean)\");\n          this.setInputsInline(false);\n      this.setOutput(true, null);\n      this.setColour(290);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n   };\n\nBlockly.Blocks['sprintlog'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Sprint Log\")\n        .appendField(new Blockly.FieldDropdown([\n          [\"points spent\", \"points spent\"],\n          [\"points committed\", \"points committed\"],\n          [\"percent sprint tasks\", \"percent sprint tasks\"],\n          [\"avg num tasks per story\", \"avg num tasks per story\"],\n          [\"num stories\", \"num stories\"],\n          [\"stories\", \"stories\"],\n          [\"num tasks\", \"num tasks\"],\n          [\"tasks\",\"tasks\"],\n          [\"deliverables\",\"deliverables\"]]), \"NAME\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([\n          [\"N/A\",\"N/A\"],\n          [\"all\",\"all\"],\n          [\"tech\",\"tech\"],\n          [\"design\",\"design\"],\n          [\"research\",\"research\"],\n          [\"done\",\"done\"],\n          [\"backlogged\",\"backlogged\"],\n          [\"in progress\",\"in progress\"],\n          [\"unmarked\",\"unmarked\"],\n          [\"roadblocks\",\"roadblocks\"]]), \"NAME\");\n        this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\n\nBlockly.Blocks['rrc'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"RRC\")\n        .appendField(new Blockly.FieldDropdown([\n          [\"all\",\"all\"],\n          [\"Planning view -> gaps in canvas\", \"Planning view -> gaps in canvas\"],[\"Planning view -> Focus for sprint\", \"Planning view -> Focus for sprint\"], [\"Planning view -> What we learned\", \"Planning view -> What we learned\"],\n\n          [\"section 1: identify your research audience\",\"section 1: identify your research audience\"], [\"section 2: define class of problems and desired outcomes\",\"section 2: define class of problems and desired outcomes\"], [\"section 3: existing approaches and schools of thought (farther approaches)\",\"section 3: existing approaches and schools of thought (farther approaches)\"], [\"section 4: existing approaches and schools of thought (closer approaches)\",\"section 4: existing approaches and schools of thought (closer approaches)\"], [\"section 5: research question\",\"section 5: research question\"], [\"section 6: conceptual contribution\",\"section 6: conceptual contribution\"], [\"section 7: technical contribution\",\"section 7: technical contribution\"], [\"section 8: synthesis tree\",\"section 8: synthesis tree\"], [\"section 9: study design\",\"section 9: study design\"], [\"section 10: core takeaways\",\"section 10: core takeaways\"], [\"section 11: revised understanding of conceptual and technical approach\",\"section 11: revised understanding of conceptual and technical approach\"], [\"section 12: future work\",\"section 12: future work\"]]), \"NAME\");\n        this.setInputsInline(false);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n };\n\n Blockly.Blocks['stash'] = {\n   init: function() {\n     this.appendDummyInput()\n         .appendField(\"stash\")\n         .appendField(new Blockly.FieldDropdown([[\"riskiest risk\",\"riskiest risk\"],[\"blocker\", \"blocker\"],[\"why blocker is challenging\", \"why blocker is challenging\"],\n         [\"Which LIP learning module would be most helpful\", \"Which LIP learning module would be most helpful\"], [\"What skill/expertise one looks for\", \"What skill/expertise one looks for\"],\n          [\"Pair Research request\", \"Pair Research request\"], [\"New understanding of blocker\", \"New understanding of blocker\"]]), \"NAME\");\n     this.appendDummyInput(\"output: string\")\n         .appendField(\"(output: string)\");\n         this.setInputsInline(false);\n     this.setOutput(true, null);\n     this.setColour(290);\n  this.setTooltip(\"\");\n  this.setHelpUrl(\"\");\n   }\n  };\n\n\n\n Blockly.Blocks['urg_guide'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"URG Guide\");\n    this.appendDummyInput(\"output: string\")\n        .appendField(\"(output: string)\");\n    this.setInputsInline(false);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n };\n\n\nBlockly.Blocks['prc'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"PRC\")\n        .appendField(new Blockly.FieldDropdown([\n        [\"all\",\"all\"],\n        [\"Planning View -> Gaps in canvas\", \"Planning View -> Gaps in canvas\"],\n        [\"Planning view -> Focus for sprint\", \"Planning view -> Focus for sprint\"], [\"Planning view -> What we learned\", \"Planning view -> What we learned\"],\n        [\"section 1: identify a design situation\",\"section 1: identify a design situation\"], [\"section 2: test if a design problem\",\"section 2: test if a design problem\"],\n        [\"section 3: describe broader impact\",\"section 3: describe broader impact\"], [\"section 4-7: design arguments\",\"section 4-7: design arguments\"],\n        [\"section 8-9: check your design arguments\",\"section 8-9: check your design arguments\"], [\"section 10: interface arguments\",\"section 10: interface arguments\"],\n         [\"section 11: interface models\",\"section 11: interface models\"], [\"section 12: system arguments\",\"section 12: system arguments\"], [\"section 13: system models\",\"section 13: system models\"],\n         [\"section 14a: study aims and expected outcomes\",\"section 14a: study aims and expected outcomes\"], [\"section 14b: study aims and expected outcomes\",\"section 14b: study aims and expected outcomes\"],\n         [\"section 15a: study setup (participants)\",\"section 15a: study setup (participants)\"], [\"section 15b: study setup (scenario)\",\"section 15b: study setup (scenario)\"],\n         [\"section 16: data collection\",\"section 16: data collection\"], [\"section 17: core findings\",\"section 17: core findings\"], [\"section 18: design implications\",\"section 18: design implications\"]]), \"NAME\");\n    this.setInputsInline(false);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n };\n\n\nBlockly.Blocks['lip_signup'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"LIP sign up\")\n        .appendField(new Blockly.FieldDropdown([[\"which learning module they signed up for\",\"which learning module they signed up for\"]]));\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([\n            [\"first studio\",\"first studio\"],\n            [\"second studio\",\"second studio\"]]), \"NAME\");\n    this.setInputsInline(true);\n    this.setOutput(true, \"resource\");\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['google calendar'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"google calendar\")\n        .appendField(new Blockly.FieldDropdown([[\"SIG meeting time\",\"SIG meeting time\"],[\"OH meeting time\", \"OH meeting time\"], [\"studio time\", \"studio time\"], [\"status update date\", \"status update date\"]]));\n    this.appendDummyInput(\"output: time\")\n        .appendField(\"(output: time)\");\n    this.setOutput(true, \"resource\");\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\n\n\nBlockly.Blocks['dtr_meeting_log'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"DTR Meeting Log\");\n    this.setOutput(true, \"resource\");\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['previous_soap_notes'] = {\n  init: function () {\n      this.appendDummyInput()\n          .appendField(\"Previous SOAP Notes\")\n          .appendField(new Blockly.FieldDropdown([[\"subjective\", \"subjective\"], [\"objective\", \"objective\"], [\"assessment\", \"assessment\"], [\"plan\", \"plan\"], [\"follow up\", \"follow up\"]]), \"NAME\");\n      this.appendDummyInput(\"output: string\")\n          .appendField(\"(output: string)\");\n          this.setInputsInline(false);\n      this.setOutput(true, null);\n      this.setColour(290);\n      this.setTooltip(\"\");\n      this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['pr_studio'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"PR (studio)\")\n        .appendField(new Blockly.FieldDropdown([[\"signed up for studio PR?\",\"signed up for studio PR?\"],\n         [\"Content of PR request\",\"Content of PR request\"],\n      [\"who they paired with\", \"who they paired with\"]]), \"NAME\");\n        this.setInputsInline(false);\n    this.appendDummyInput()\n            .appendField(new Blockly.FieldDropdown([\n              [\"first studio\",\"first studio\"],\n              [\"second studio\",\"second studio\"]]), \"NAME\");\n            this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n };\n\n\nBlockly.Blocks['student'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Student\")\n        .appendField(new Blockly.FieldDropdown([[\"Jason\",\"Jason\"], [\"Hang\",\"Hang\"]]), \"NAME\")\n        .appendField(new Blockly.FieldDropdown([[\"D_points\",\"D_points\"], [\"T_points\",\"T_points\"], [\"R_points\",\"R_points\"], [\"points committed\",\"points committed\"],[\"points spent\", \"points spent\"], [\"progress (percent of committed points done)\", \"progress (percent of committed points done\"], [\"burndown (hours spent / points required)\",\"burndown (hours spent / points required\"]]), \"NAME\");\n    this.appendDummyInput(\"output: number\")\n        .appendField(\"(output: number)\");\n        this.setInputsInline(false);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['soap_notes'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"SOAP Notes\")\n        .appendField(new Blockly.FieldDropdown([[\"subjective\", \"subjective\"],\n                                                [\"objective\", \"objective\"],\n                                                [\"assessment\",\"assessment\"],\n                                                [\"plan\", \"plan\"]]), \"NAME\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"First SIG\", \"First SIG\"],\n                                                [\"Second SIG\", \"Second SIG\"],\n                                                [\"First OH\",\"First OH\"],\n                                                [\"Second OH\", \"Second OH\"],\n                                                [\"All\", \"All\"]]), \"NAME\");\n        this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n };\n\nBlockly.Python['soap_notes'] = function (block) { return \"...\";};\nBlockly.Python['ipm'] = function (block) { return \"...\";};\nBlockly.Python['sprintlog'] = function (block) { return \"...\";};\nBlockly.Python['rrc'] = function (block) { return \"...\";};\nBlockly.Python['prc'] = function (block) { return \"...\";};\nBlockly.Python['stash'] = function (block) { return \"...\";};\nBlockly.Python['pr_studio'] = function (block) { return \"...\";};\nBlockly.Python['lip_signup'] = function (block) { return \"...\";};\nBlockly.Python['dtr_meeting_log'] = function (block) { return \"...\";};\nBlockly.Python['urg_guide'] = function (block) { return \"...\";};\nBlockly.Python['previous_soap_notes'] = function (block) { return \"...\";};\nBlockly.Python['google calendar'] = function (block) { return \"...\";};\nBlockly.Python['student'] = function (block) { return \"...\";};\nBlockly.Python['student response to slack bot'] = function (block) { return \"...\";};\nBlockly.Python['ipdetection triggered - mentor wants response triggered (true or false)m'] = function (block) { return \"...\";};\n","import Blockly from 'blockly';\nimport 'blockly/python';\n\n\n\n Blockly.Blocks['github'] = {\n   init: function() {\n     this.appendDummyInput()\n         .appendField(\"Github\")\n         .appendField(new Blockly.FieldDropdown([\n           [\"num lines code committed\", \"num lines code committed\"],\n           [\"num branches created\", \"num branches created\"]]), \"NAME\");\n     this.appendDummyInput()\n         .appendField(new Blockly.FieldDropdown([[\"student1\", \"student1\"],\n                                                 [\"student2\", \"student2\"],\n                                                 [\"All\", \"All\"]]), \"NAME\");\n         this.setInputsInline(true);\n     this.setOutput(true, null);\n     this.setColour(110);\n  this.setTooltip(\"\");\n  this.setHelpUrl(\"\");\n   }\n  };\n\n\nBlockly.Python['github'] = function (block) { return \"...\";};\n\n\n\nBlockly.Blocks['slack'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Slack\")\n        .appendField(new Blockly.FieldDropdown([\n          [\"num unique people messaged\", \"num unique people messaged\"]]), \"NAME\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"student1\", \"student1\"],\n                                                [\"student2\", \"student2\"],\n                                                [\"All\", \"All\"]]), \"NAME\");\n        this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(110);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n };\n\n\nBlockly.Python['slack'] = function (block) { return \"...\";};\n","import React from 'react';\n// import Collapsible from 'react-collapsible';\n\nexport default function Scaffolding() {\n    return (\n      <div>\n\n        <label style={{fontSize: \"15px\"}}>Step1: Think back to a time when one of your students was not working or learning effectively this quarter. Describe what the student did and how you noticed it was happening.</label>\n        <textarea style={{ height: \"20vh\", width: \"100%\", fontSize: \"15px\", marginBottom: 16, marginTop: 10 }}></textarea>\n\n        <label style={{fontSize: \"15px\"}}>Step2: After you noticed this situation, how did you support your student in practicing a more effective working or learning strategy?<br/>In an ideal world, how would you have supported them to implement the effective strategy across the venues/tools/processes in the DTR network?</label>\n        <textarea style={{ height: \"10vh\", width: \"100%\", fontSize: \"15px\", marginBottom: 16, marginTop: 10 }}></textarea>\n\n        <label style={{fontSize: \"15px\"}}>Step3: Restate more concisely the <br/>1) the ineffective working or learning strategy you are trying to detect and <br/>2) how you would like to support the student to implement the effective strategy across the venues/tools/processes in the DTR network?</label>\n        <textarea style={{ height: \"20vh\", width: \"100%\", fontSize: \"15px\", marginTop: 10, marginBottom: 16 }}></textarea>\n\n      </div>\n    );\n}","import Blockly from 'blockly';\nimport 'blockly/python';\n\n\n\n Blockly.Blocks['github3'] = {\n   init: function() {\n     this.appendDummyInput()\n         .appendField(new Blockly.FieldDropdown([[\"team\", \"team\"],\n                                                 [\"student1\", \"student1\"],\n                                                 [\"student2\", \"student2\"]]), \"NAME\");\n     this.appendDummyInput()\n         .appendField(\"Github\")\n         .appendField(new Blockly.FieldDropdown([\n           [\"working on tech\", \"working on tech\"]]), \"NAME\");\n\n         this.setInputsInline(true);\n     this.setOutput(true, null);\n     this.setColour(\"#0066cc\");\n  this.setTooltip(\"\");\n  this.setHelpUrl(\"\");\n   }\n  };\n//[\"has not finished deliverables\", \"student has not finished deliverables\"], HOW WOULD THIS BE DETECTED IN sprint log?\n//[\"has spent a lot of time\",\"has spent a lot of time\"] ALSO unclear what this means\n\nBlockly.Blocks['sprint_log3'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"team\", \"team\"],\n                                                [\"student1\", \"student1\"],\n                                                [\"student2\", \"student2\"]]), \"NAME\");\n    this.appendDummyInput()\n        .appendField(\"Sprint Log\")\n        .appendField(new Blockly.FieldDropdown([\n          [\"working on tech\", \"working on tech\"],\n          [\"working on user testing\", \"working on user testing\"],\n          [\"working on argumentation\", \"working on argumentation\"],\n          [\"1/4 through points\", \"1/4 through points\"],\n          [\"halfway through points\", \"halfway through points\"],\n          [\"3/4 through points\", \"3/4 through points\"],\n          [\"over points proportional to time elapsed in sprint\", \"over points proportional to time elapsed in sprint\"],\n          [\"at least one story is incomplete\", \"at least one story is incomplete\"],\n          [\"has not finished any tasks\", \"has not finished any tasks\"]]), \"NAME\");\n        this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#0066cc\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n };\n\n\nBlockly.Blocks['high_by_end_of_sprint'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"By the end of sprint\");\n    this.setOutput(true, null);\n    this.setColour(\"#cc9900\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['high_halfway_through_sprint'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Half way through the sprint\");\n    this.setOutput(true, null);\n    this.setColour(\"#cc9900\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['high_pr_request'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"PR request contains\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldTextInput(\"type here!\"), \"NAME\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#cc9900\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['high_deliverables'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"No deliverables attached in slack thread\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['high_canvas_update'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Canvas not updated\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#0066cc\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['high_learn_nothing'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Student does not learn anything new\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(290);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['high_new_argument'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Student has new\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"design\",\"design\"], [\"interface\",\"interface\"], [\"system\",\"system\"]]), \"argumentation\");\n    this.appendDummyInput()\n        .appendField(\"argument\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#0066cc\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['before_first_sig_of_sprint'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"before first SIG of sprint\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#cc9900\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['before_first_studio_of_sprint'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"before first Studio of sprint\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#cc9900\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['before_first_oh_of_sprint'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"before first OH of sprint\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#cc9900\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['before_second_sig_of_sprint'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"before second SIG of sprint\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#cc9900\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['before_second_studio_of_sprint'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"before second Studio of sprint\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#cc9900\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['before_second_oh_of_sprint'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"before second OH of sprint\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#cc9900\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['slacked_someone'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Have you slacked \");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldTextInput(\"type name\"), \"NAME\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#68A65C\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['slacked_deliverables'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Have you slacked deliverables to \");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldTextInput(\"type channel OR thread name\"), \"NAME\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#68A65C\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['high_mysore_signup'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Mysore signup is \");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldTextInput(\"type here!\"), \"NAME\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#cc9900\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['high_sprint_log_contains'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Sprint Log Stories or Tasks contains\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldTextInput(\"type here!\"), \"NAME\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#0066cc\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['high_sprint_updated'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Sprint Log not updated\");\n    this.setInputsInline(true);\n    this.setOutput(true, null);\n    this.setColour(\"#0066cc\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\n///////////////////////////\n\nBlockly.Blocks['time_subcategory'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"-----------------TIME----------------\");\n    this.setColour(\"#000000\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['studio_subcategory'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"-----------------STUDIO----------------\");\n    this.setColour(\"#000000\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['github_subcategory'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"-----------------GITHUB----------------\");\n    this.setColour(\"#000000\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['sprint_log_subcategory'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"-----------------SPRINT_LOG----------------\");\n    this.setColour(\"#000000\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['canvas_subcategory'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"-----------------CANVAS----------------\");\n    this.setColour(\"#000000\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['slack_subcategory'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"-----------------SLACK----------------\");\n    this.setColour(\"#000000\");\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n","import React from 'react';\n\nconst detectionToolbox = [\n    {\n      name: \"Logic\",\n      colour: \"#5C81A6\",\n      blocks: [\n        {type: 'if'},\n        {type: 'not'},\n        {type: 'and'},\n        {type: 'or'},\n        {type: 'logic_compare'},\n\n      ]\n\n    },\n    {\n      name: \"Text\",\n      colour: \"#68DEC2\",\n      blocks: [{ type: \"text\" }],\n    },\n    {\n      name: \"Math\",\n      colour: \"#ACAEEA\",\n      blocks: [\n        { type: \"math_round\" },\n        { type: \"math_number\" },\n        { type: \"addition\" },\n        { type: \"subtraction\" },\n        { type: \"abs\" },\n        { type: \"negative\" },\n        { type: \"greater_than\" },\n        { type: \"less_than\" },\n      ],\n    },\n    {\n      name: \"People\",\n      colour: \"#68A65C\",\n      blocks: [\n        {type: 'slack_subcategory'},\n        {type: 'slacked_someone'},\n        {type: 'slacked_deliverables'},\n        {type: 'slack_message'},\n      ]\n\n    },\n    {\n      name: \"Venues\",\n      colour: \"#cc9900\",\n      blocks: [\n        //sprint\n        {type: 'time_subcategory'},\n\n        {type: 'high_halfway_through_sprint'},\n        {type: 'high_by_end_of_sprint'},\n        {type: 'before_first_sig_of_sprint'},\n        {type: 'before_first_studio_of_sprint'},\n        {type: 'before_first_oh_of_sprint'},\n        {type: 'before_second_sig_of_sprint'},\n        {type: 'before_second_studio_of_sprint'},\n        {type: 'before_second_oh_of_sprint'},\n\n        {type: 'studio_subcategory'},\n        {type: 'high_pr_request'},\n        {type: 'high_mysore_signup'},\n      ]\n\n    },\n    {\n      name: \"Tools\",\n      colour: \"#0066cc\",\n      blocks: [\n        {type: 'github_subcategory'},\n        //github\n        {type: 'github3'},\n        //sprint log\n        {type: 'sprint_log_subcategory'},\n        {type: 'sprint_log3'},\n        {type: 'high_sprint_log_contains'},\n        {type: 'high_sprint_updated'},\n        //canvas\n        {type: 'canvas_subcategory'},\n        {type: 'high_canvas_update'},\n        {type: 'high_new_argument'},\n        \n      ]\n    },\n    /*\n    {\n      name: \"Tools\",\n      colour: \"#68A65C\",\n      blocks: [\n\n        //{type: 'soap_notes'},\n        {type: 'github'},\n        {type: 'slack'},\n        //{type: 'detection triggered - mentor wants response triggered (true or false)'},\n      ]\n\n    },\n    \n   \n    {\n      name: \"Resources\",\n      colour: \"#CEABFA\",\n      blocks: [\n\n        {type: 'sprintlog'},\n        {type: 'rrc'},\n        {type: 'prc'},\n\n        {type: 'pr_studio'},\n        {type: 'lip_signup'},\n        {type: 'soap_notes'},\n\n      ]\n    },\n    \n    {\n      name: \"Functions\",\n      colour: \"#D3FFCE\",\n      blocks: [\n        //{type: 'every'},\n        { type: \"contains\" },\n        { type: \"was_updated\" },\n        { type: 'slack_message'},\n        //{ type: \"filled\" },\n        //{ type: \"was_read\" },\n        //{type: 'At'},\n        //{ type: \"tf_slack_message\" },\n      ],\n    },\n    {\n      name: \"HighLevel\",\n      colour: \"#D3FFCE\",\n      blocks: [\n        { type: \"sprint_log3\"},\n        { type: \"github3\"},\n        { type: \"high_by_end_of_sprint\"},\n        { type: \"high_halfway_through_sprint\"},\n        { type: \"high_pr_request\"},\n        { type: \"high_deliverables\"},\n        { type: \"high_canvas_update\"},\n        { type: \"high_learn_nothing\"},\n        { type: \"high_new_argument\"},\n      ],\n    },\n    */\n    {\n      name: \"Concepts\",\n      colour: \"#D3FFCE\",\n      blocks: [\n        { type: \"set\" },\n        { type: \"concept_variable\" }],\n    },\n\n    {\n      name: \"Time\",\n      colour: \"#F08080\",\n      blocks: [\n        { type: \"time\" },\n      ],\n    },\n    /*\n    {\n      name: \"Communication\",\n      colour: \"#998362\",\n      blocks: [{ type: \"send\" }],\n    },\n    {\n      name: \"Medium\",\n      colour: \"#998362\",\n      blocks: [{ type: \"slack_medium\" }, { type: \"email\" }],\n    },\n    */\n    /*\n    {\n      name: \"Modifier\",\n      colour: \"#F08080\",\n      blocks: [\n        { type: \"modifier\" },\n      ],\n    },\n\n    {\n      name: \"Event\",\n      colour: \"#F08080\",\n      blocks: [\n        { type: \"first_sig\" },\n        { type: \"second_sig\"},\n        { type: \"sprint\" },\n        //{ type: \"days_of_the_week\" },\n        { type: \"first_office_hour\" },\n        { type: \"second_office_hour\"},\n        { type: \"first_studio\"},\n        { type: \"second_studio\"},\n        { type: \"week\" },\n        { type: \"math_number\" },\n      ],\n    },\n    */\n\n    /*\n    {\n      name: \"Situation\",\n      colour: \"#5C81A6\",\n      blocks: [{ type: \"situation\" }],\n    },\n    */\n  ];\n\n  /*\nconst timeToolbox = [\n    {\n      name: \"Time\",\n      colour: \"#F08080\",\n      blocks: [\n        { type: \"time\" },\n        { type: \"time_elapsed\" },\n        { type: \"time_period\" },\n      ],\n    },\n    {\n      name: \"Modifier\",\n      colour: \"#F08080\",\n      blocks: [\n        { type: \"after\" },\n        { type: \"before\" },\n        { type: \"during\" },\n        { type: \"at\" },\n      ],\n    },\n    {\n      name: \"Event\",\n      colour: \"#F08080\",\n      blocks: [\n        { type: \"sig\" },\n        { type: \"sprint\" },\n        { type: \"days_of_the_week\" },\n        { type: \"office_hour\" },\n        { type: \"studio\" },\n        { type: \"week\" },\n      ],\n    },\n    {\n      name: \"Math\",\n      colour: \"#ACAEEA\",\n      blocks: [\n        { type: \"math_round\" },\n        { type: \"math_number\" },\n        { type: \"addition\" },\n      ],\n    },\n  ];\n  */\n\n\n\nexport { detectionToolbox };\n","import \"../App.css\";\nimport \"../customBlocks/custom_Blocks\";\nimport React from \"react\";\nimport ReactBlockly from \"react-blockly\";\nimport { BlocklyWorkspace } from \"react-blockly\";\nimport Blockly from \"blockly\";\nimport \"../customBlocks/communication_blocks\";\nimport \"../customBlocks/function_blocks\";\nimport \"../customBlocks/time_blocks\";\nimport \"../customBlocks/resource_block\";\nimport \"../customBlocks/object_blocks\";\nimport \"../customBlocks/high_level\";\nimport \"intersection-observer\";\nimport \"react-pro-sidebar/dist/css/styles.css\";\n//import {toolboxCategories} from \"./blockly_toolbox/detectionToolbox\";\nimport { detectionToolbox } from \"../blockly_toolbox/detectionToolbox\";\n//import { responseToolbox } from \"./blockly_toolbox/responseToolbox\";\n\nexport default function DetectorWorkspace() {\n\n    // initial configuration\n    const initialXml =\n    '<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"text\" x=\"70\" y=\"30\"><field name=\"TEXT\"></field></block></xml>';\n\n    function workspaceDidChange(workspace) {\n        const newXml = Blockly.Xml.domToText(Blockly.Xml.workspaceToDom(workspace));\n        /*\n        document.getElementById('generated-xml').innerText = newXml;\n        const code = Blockly.Python.workspaceToCode(workspace);\n        document.getElementById('code').value = code;\n        */\n    }\n\n    return (\n      <div style = {{marginBottom: 16, marginTop: 10}}>\n        <ReactBlockly\n            toolboxCategories={detectionToolbox}\n            initialXml={initialXml}\n            wrapperDivClassName=\"fill-height\"\n            workspaceConfiguration={\n            {\n                /*\n                grid: {\n                spacing: 20,\n                length: 3,\n                colour: '#ccc',\n                snap: true,\n                },\n                */\n\n                // theme: DarkTheme,\n\n                zoom: {\n                controls: true,\n                wheel: true,\n                startScale: 1.0,\n                maxScale: 3,\n                minScale: 0.3,\n                scaleSpeed: 1.2,\n                pinch: true\n                },\n\n\n            }\n            }\n\n            workspaceDidChange={workspaceDidChange}\n        />\n      </div>\n    );\n}\n","import React from 'react';\n\nconst responseToolbox = [\n\n    /*\n    {\n      name: \"Logic\",\n      colour: \"#5C81A6\",\n      blocks: [\n        { type: \"if\" },\n        { type: \"not\" },\n        { type: \"and\" },\n        { type: \"or\" },\n        { type: \"logic_compare\" },\n      ],\n    },\n    {\n      name: \"Situation\",\n      colour: \"#5C81A6\",\n      blocks: [{ type: \"situation_instance\" }],\n    },\n    */\n    {\n      name: \"Communication\",\n      colour: \"#998362\",\n      blocks: [{ type: \"send\" }],\n    },\n    {\n      name: \"Text\",\n      colour: \"#68DEC2\",\n      blocks: [{ type: \"text\" }],\n    },\n    {\n      name: \"Medium\",\n      colour: \"#998362\",\n      blocks: [{ type: \"slack_medium\" }, { type: \"email\" }],\n    },\n    {\n      name: \"Time\",\n      colour: \"#F08080\",\n      blocks: [\n        { type: \"time\" },\n      ],\n    },\n    /*\n    {\n      name: \"Modifier\",\n      colour: \"#F08080\",\n      blocks: [\n        { type: \"modifier\" },\n      ],\n    },\n    {\n      name: \"Event\",\n      colour: \"#F08080\",\n      blocks: [\n        { type: \"sig\" },\n        { type: \"sprint\" },\n        { type: \"days_of_the_week\" },\n        { type: \"office_hour\" },\n        { type: \"studio\" },\n        { type: \"week\" },\n        { type: \"math_number\" },\n      ],\n    },\n    */\n];\n\nexport { responseToolbox };\n","import \"../App.css\";\nimport \"../customBlocks/custom_Blocks\";\nimport React from \"react\";\nimport ReactBlockly from \"react-blockly\";\nimport Blockly from \"blockly\";\nimport \"../customBlocks/communication_blocks\";\nimport \"../customBlocks/function_blocks\";\nimport \"../customBlocks/time_blocks\";\nimport \"../customBlocks/resource_block\";\nimport \"intersection-observer\";\nimport \"react-pro-sidebar/dist/css/styles.css\";\n//import {actionToolbox} from \"./blockly_toolbox/detectionToolbox\";\nimport { responseToolbox } from \"../blockly_toolbox/responseToolbox\";\n\nexport default function ResponseWorkspace() {\n\n    // initial configuration\n    const initialXml =\n    '<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"text\" x=\"70\" y=\"30\"><field name=\"TEXT\"></field></block></xml>';\n\n    function workspaceDidChange(workspace) {\n        const newXml = Blockly.Xml.domToText(Blockly.Xml.workspaceToDom(workspace));\n        /*\n        document.getElementById('generated-xml').innerText = newXml;\n        const code = Blockly.Python.workspaceToCode(workspace);\n        document.getElementById('code').value = code;\n        */\n    }\n\n    return (\n      <div style = {{marginTop: 10}}>\n        <ReactBlockly\n            toolboxCategories={responseToolbox}\n            initialXml={initialXml}\n            wrapperDivClassName=\"card\"\n            workspaceConfiguration={\n            {\n                //theme: DarkTheme,\n                /*\n                zoom: {\n                  controls: true,\n                  wheel: true,\n                  startScale: 1.0,\n                  maxScale: 3,\n                  minScale: 0.3,\n                  scaleSpeed: 1.2,\n                  pinch: true\n                },*/\n            }\n            \n            }\n            workspaceDidChange={workspaceDidChange}\n        />\n      </div>\n    );\n}","import \"./App.css\";\nimport \"./customBlocks/custom_Blocks\";\nimport React from \"react\";\nimport \"./customBlocks/communication_blocks\";\nimport \"./customBlocks/function_blocks\";\nimport \"./customBlocks/time_blocks\";\nimport \"./customBlocks/resource_block\";\nimport \"./customBlocks/object_blocks\";\nimport \"intersection-observer\";\nimport \"react-pro-sidebar/dist/css/styles.css\";\nimport Scaffolding from \"./Scaffolding\";\nimport DetectorWorkspace from \"./blockly_workspace/DetectorWorkspace\";\nimport ResponseWorkspace from \"./blockly_workspace/ResponseWorkspace\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Select from \"react-select\";\nimport map from \"lodash/map\";\nimport range from \"lodash/range\";\nimport { Paper } from \"@material-ui/core\";\n\n/*\nimport ReactBlockly from \"react-blockly\";\nimport {toolboxCategories, actionToolbox, timeToolbox} from \"./toolboxCategories\";\nimport Blockly from \"blockly\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DarkTheme from \"@blockly/theme-dark\";\nimport MyTimeline from \"./timeline/Timeline\";\nimport HorizontalLabelPositionBelowStepper from \"./timeline/Stepper\";\nimport DiscreteSlider from \"./timeline/Slider\";\nimport { ProSidebar, Menu, MenuItem, SubMenu } from \"react-pro-sidebar\";\nimport CollapsibleTable from \"./dictionary/Dictionary\";\nimport { ScrollView } from \"@cantonjs/react-scroll-view\";\n*/\n\n// define \"applicable set\"\nconst options = [\n  { value: \"km\", label: \"Knowledge Maps\" },\n  { value: \"se\", label: \"Scaffolded Exercises\" },\n  { value: \"we\", label: \"Weekly\" },\n  { value: \"st\", label: \"Skill Tracking\" },\n  { value: \"os\", label: \"Orchestration Script\" },\n  { value: \"ce\", label: \"Collective Experience\" },\n  { value: \"cn\", label: \"Collective Narrative\" },\n  { value: \"mr\", label: \"Metacognitive Reflection\" },\n  { value: \"cer\", label: \"CE for Relationship Development\" },\n  { value: \"qa\", label: \"Q&A Buddy\" },\n  { value: \"aimee\", label: \"Aimee\" },\n  { value: \"ariella\", label: \"Ariella\" },\n  { value: \"cindy\", label: \"Cindy\" },\n  { value: \"fardeem\", label: \"Fardeem\" },\n  { value: \"hang\", label: \"Hang\" },\n  { value: \"izzy\", label: \"Izzy\" },\n  { value: \"jason\", label: \"Jason\" },\n  { value: \"jenny\", label: \"jenny\" },\n  { value: \"jonathan\", label: \"Jonathan\" },\n  { value: \"neha\", label: \"Neha\" },\n  { value: \"molly\", label: \"Molly\" },\n  { value: \"roxy\", label: \"Roxy\" },\n  { value: \"kapil\", label: \"Kapil\" },\n  { value: \"ryan\", label: \"Ryan\" },\n  { value: \"leesha\", label: \"Leesha\" },\n  { value: \"gobi\", label: \"Gobi\" },\n  { value: \"harrison\", label: \"Harrison\" },\n];\n\nexport default function App() {\n\n  return (\n    <div style={{/*backgroundColor: '#1e1e1e',*/marginLeft:16, marginRight:16, marginTop:16,marginBottom:16}}>\n\n\n      <Grid container spacing={5}>\n\n        <Grid item xs={3}>\n\n          <Scaffolding />\n          <label style={{fontSize: \"15px\"}}>Step4: Please select or write in text which student(s) and/or project groups(s) you want to detect this ineffective strategy for.</label>\n          <Select options = {options} style={{fontSize: \"15px\", marginTop: 10}} placeholder = \"Choose a project group/student\" isMulti/>\n\n        </Grid>\n\n        <Grid item xs={9}>\n\n          <label style={{fontSize: \"15px\", marginBottom: 16}}>Step5: Detector<br/>Using your answer from Step3 as a guide, create one or more ineffective strategy / slack message pairs with the if block in the Logic category to represent the condition you are detecting and the suggested action you wish to send.</label>\n          <DetectorWorkspace />\n\n          {/*\n          <label style={{fontSize: \"15px\", marginBottom: 16}}>Step6: Response<br/>Using your answer from Step3 as a guide, express the response you would like to trigger to support the student across the venues/tools/processes in the DTR network if the detector expression is evaluated to true.</label>\n          <ResponseWorkspace />\n          */}\n          <label style={{fontSize: \"15px\", marginBottom: 16}}>Step6: Response<br/>Using your answer from Step3 as a guide, express one or more responses you would like to trigger to support the student across the venues/tools/processes in the DTR network if the detector expression is evaluated to true.(scroll to define more responses)</label>\n          <div style={{ width: \"100%\", overflow: \"auto\", display: \"flex\" }}>\n            {map(range(10), _ => (\n              <Container />\n            ))}\n          </div>\n\n        </Grid>\n\n      </Grid>\n\n    </div>\n  );\n}\n\nconst Container = () => {\n  return (\n    <div style={{ height: \"300px\", width: \"514px\", margin: \"16px\" }}>\n      {/*<Paper style={{ height: \"100%\", width: \"514px\" }}>Hello</Paper>*/}\n      <ResponseWorkspace/>\n    </div>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}